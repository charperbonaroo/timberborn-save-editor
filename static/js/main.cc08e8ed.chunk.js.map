{"version":3,"sources":["deepCopy.ts","LoadSaveCard.tsx","Navbar.tsx","util/UUID.ts","SaveContext.ts","BeaverUtil.ts","plugins/BeaverCopier.tsx","StockpileUtil.ts","allEntities.ts","ConstructionUtil.ts","plugins/ConstructionPlugin.tsx","plugins/DownloadPlugin.tsx","plugins/MapPlugin.tsx","plugins/MapSizePlugin.tsx","plugins/PropertiesPlugin.tsx","plugins/StockpilePlugin.tsx","allPlugins.ts","PluginIndex.tsx","PluginShow.tsx","SaveEditor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["deepCopy","obj","JSON","parse","stringify","exmapleLetsPlay","require","exampleIronTeeth","LoadSaveCard","onSaveLoaded","useState","error","setError","onInput","useCallback","event","fileList","target","files","file","item","Error","loadJson","json","data","__originalFilename","name","console","log","test","reader","FileReader","readAsText","onload","_event","result","JSZip","loadAsync","then","zip","Object","values","async","catch","loadExample","filename","className","type","accept","onClick","e","href","rel","style","display","lineHeight","verticalAlign","fontFamily","fontSize","Navbar","saveData","onHome","preventDefault","SaveContext","createContext","undefined","lut","i","toString","BeaverUtil","setAge","beaver","age","dayNumber","Singletons","DayNightCycle","DayNumber","Components","Character","DayOfBirth","Math","floor","setDefaultNeeds","MortalNeeder","DeathDays","NeedManager","Needs","need","includes","Name","Points","setDefaultName","names","BeaverNameService","Names","sample","setName","reset","Id","d0","random","d1","d2","d3","UUID","assign","BehaviorManager","RunningBehaviorId","RunningBehaviorOwner","ReturnToBehavior","TimestampedBehaviorLog","Dweller","Worker","BeaverCopier","id","group","position","enabled","read","write","Preview","BeaverStatus","entities","Entities","Editor","initialData","onClose","onSubmit","filter","_","Template","beavers","setBeavers","page","setPage","pageSize","setPageSize","targetAmount","setTargetAmount","beaverId","setBeaverId","sortedBeavers","sortBy","slice","offset","copyBeaver","newBeaver","duplicate","concat","doSubmit","hasNextPage","length","doSetBeaverCount","adults","newBeavers","push","editingBeaver","useMemo","find","updateBeaver","patch","index","findIndex","join","BeaverEditor","fontWeight","map","round","Position","X","Y","Z","colSpan","min","htmlFor","value","onChange","parseInt","width","Number","MAX_SAFE_INTEGER","disabled","reduce","acc","entity","adultCount","childCount","sum","beaverData","setBeaverData","updateBeaverData","property","minLength","stockpileTypes","capacity","stockpileIds","StockpileUtil","getCapacity","stockpile","getStockpiles","countGoods","accumulator","Storage","Goods","Good","Amount","PATH_ENTITIES","PLATFORM_ENTITIES","BRIDGE_ENTITIES","WOOD_ENTITIES","POWER_ENTITIES","WATER_ENTITIES","LANDSCAPING_ENTITIES","FOOD_ENTITIES","METAL_ENTITIES","HOUSING_ENTITIES","SCIENTE_ENTITIES","LEISURE_ENTITIES","DECORATION_ENTITIES","MONUMENT_ENTITIES","LABOR_ENTITIES","STORAGE_ENTITIES","TREE_ENTITIES","BEAVER_ENTITIES","buildingCategories","flat","Power","Water","Landscaping","Food","Metal","Housing","Science","Leisure","Decoration","Monuments","Labor","Trees","getSpeciesEntities","species","buildingTypes","Map","entries","building","ConstructionUtil","entityFilter","Constructible","Finished","reverseEntityFilter","getConstructionSites","getBuildingType","constructionSite","template","get","finishConstruction","ConstructionSite","BuildTimeProgressInHoursKey","finishAllConstruction","forEach","ConstructionPlugin","save","window","__saveData","constructionSites","constructionGroups","groups","groupBy","sites","ConstructionTypesTable","counts","column","descending","sort","setSort","setFilter","setConstructionSites","buildingData","coords","BlockObject","Coordinates","finished","a","b","localeCompare","sortedAndFiltered","filterColumn","filtered","toggleSort","finishBuildingConstruction","itemId","currentTarget","parentNode","newSites","finishAll","info","ConstructionTableFilterForm","aria-sort","role","countsTable","sorted","toPairs","otherIndex","other","splice","chunk","fill","Array","label","filterType","setFilterType","filterValue","setFilterValue","valueOptions","arr","uniq","DownloadPlugin","Infinity","url","setUrl","useEffect","GameVersion","replace","generateAsync","blob","URL","createObjectURL","now","Date","toISOString","substr","getHours","getMinutes","setFilename","download","endsWith","SSAO","_SSAO","BlendFunction","BufferGeometryUtils","STOCKPILE_ENTITIES","EDITABLE_ENTITIES","useEntitiesOfTypes","entityData","templateIds","entitiesIdsByTemplate","entitiesByIds","lodash","flatten","compact","toJSON","readEntityData","deleteIds","updateIds","readMapData","mapSizeX","MapSize","Size","mapSizeY","i2x","i2y","i2xy","i2xyz","y","heightMap","Uint8Array","from","TerrainMap","Heights","split","moistureMap","Float32Array","SoilMoistureSimulator","MoistureLevels","parseFloat","waterDepthMap","WaterMap","WaterDepths","MapPlugin","mapData","state","setState","selectedEntityId","setSelectedEntityId","selectedEntity","setEntity","oldEntity","newState","selectEntityId","Gui","camera","blendFunction","MULTIPLY","samples","radius","intensity","scale","SlowBoxesHeightMap","SlowBoxesWaterMap","TreesMap","PlatformsMap","PathsMap","StockpilesMap","BeaversMap","MapControls","StockpileForm","BeaverForm","setBeaver","getValue","path","setValue","format","x","set","max","step","val","stockpiles","Stockpile","selected","isHover","setIsHover","pos","z","meshRef","useRef","useLayoutEffect","current","sizeX","sizeY","sizeZ","geom","mergeBufferGeometries","BoxBufferGeometry","translate","CylinderBufferGeometry","rotate","geometry","ref","onPointerEnter","onPointerLeave","opacity","transparent","color","Beaver","isAdult","args","goodIds","SingleGoodAllower","AllowedGood","setCountGoods","totalCounts","newEntity","goodId","valueAsNumber","createTreeGeom","dry","dead","adult","ConeBufferGeometry","meshWithColorFromGeoms","geometries","Mesh","mat","MeshStandardMaterial","rotateY","orientationMatch","Orientation","Value","match","PI","getEntityRotationY","paths","mesh","PlaneBufferGeometry","rotateX","object","height","treeEntities","trees","WateredNaturalResource","DryingProgress","Growable","GrowthProgress","greenTrees","brownTrees","isWet","box","wetBoxes","dryBoxes","wetLand","dryLand","MapSizePlugin","indexOf","setData","parseIntValue","fields","PropertiesPlugin","fromJS","toJS","field","getIn","setIn","StockpilePlugin","allGoods","StockpileInventoryTable","stockpileId","setStockpileId","setStockpiles","setStockpile","mappedStockpiles","mapValues","StockpileButton","goods","setCounts","nativeEvent","submitter","getAttribute","v","setCount","good","count","fillToCapacity","initialMaxGood","remainder","newCounts","whiteSpace","allPlugins","pluginsImport","PluginIndex","onSelectPlugin","groupedPlugins","groupName","plugins","PluginShow","pluginId","onSubmitData","newData","SaveEditor","setPluginId","onSubmitPlugin","confirm","App","setSaveData","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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BACA,gCACA,oCACA,wBACA,yBAEFC,qBAAsB,CACpB,qBACA,qBACA,8BACA,+BAEFC,cAAe,CACb,mBACA,mBACA,kBACA,kBACA,sBACA,sBACA,yBACA,yBACA,oBACA,sBACA,sBACA,6BACA,8BAEFC,eAAgB,CACd,0BACA,0BACA,oBACA,oBACA,iBACA,kBAEFC,iBAAkB,CAChB,kBACA,yBACA,wBACA,wBACA,sBACA,oBACA,yBACA,0BACA,sBAEFC,iBAAkB,CAChB,qBACA,qBACA,wBACA,yBAEFC,iBAAkB,CAChB,oBACA,oBACA,qBACA,qBACA,2BACA,2BACA,mBACA,mBACA,iBACA,iBACA,mBACA,mBACA,qBACA,sBAEFC,oBAAqB,CACnB,iBACA,uBACA,uBACA,uBACA,uBACA,qBACA,qBACA,yBACA,yBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,kBACA,kBACA,kBACA,kBACA,uBAEFC,kBAAmB,CACjB,+BACA,+BACA,4BACA,4BACA,4BACA,6BAEFC,eAAgB,CACd,6BACA,6BACA,wBACA,wBACA,wBACA,yBAGFC,iBAAkBzB,EAAcH,eAAe3B,KAAI,qBAAGpD,MAEtD4G,cAAe,CAAC,QAAS,OAAQ,SACjCC,gBAAiB,CAAC,cAAe,gBAKtBC,GAFexL,OAAOC,OAAOiF,GAAUuG,OAElB,CAChC,uBAAuB,GAAvB,mBACKvG,EAASoF,eADd,YAEKpF,EAASqF,mBAFd,YAGKrF,EAASsF,kBAEdkB,MAAOxG,EAASwF,eAChBiB,MAAOzG,EAASyF,eAChBiB,YAAa1G,EAAS0F,qBACtBiB,KAAM3G,EAAS2F,cACfiB,MAAO5G,EAAS4F,eAChBiB,QAAS7G,EAAS6F,iBAClBiB,QAAS9G,EAAS8F,iBAClBiB,QAAS/G,EAAS+F,iBAClBiB,WAAYhH,EAASgG,oBACrBiB,UAAWjH,EAASiG,kBACpBiB,MAAOlH,EAASkG,eAChBlB,QAAShF,EAASmG,iBAClBgB,MAAOnH,EAASoG,gBAGZgB,EAAqB,SAACC,GAC1BvM,OAAOC,OAAOiF,G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","file":"static/js/main.cc08e8ed.chunk.js","sourcesContent":["/**\n * A dirty way to create a deep-copy of a save. The deep copy is usually created\n * to prevent the original copy from being edited or to force a re-render when\n * one of its deep objects might have been updated.\n * @param save\n * @returns\n */\nexport function deepCopy<T>(obj: T): T {\n  return JSON.parse(JSON.stringify(obj));\n}\n","import JSZip from \"jszip\";\nimport { FormEvent, useCallback, useState } from \"react\";\nimport { deepCopy } from \"./deepCopy\";\nimport { DemoSave } from \"./DemoSave\";\n\nconst exmapleLetsPlay = require(\"./examples/lets-play-plains.json\");\nconst exampleIronTeeth = require(\"./examples/iron-teeth-plains-1-1.json\");\n\nexport function LoadSaveCard({ onSaveLoaded }: { onSaveLoaded: (save: DemoSave) => void }) {\n  const [error, setError] = useState<unknown>();\n\n  const onInput = useCallback((event: FormEvent<HTMLInputElement>) => {\n    try {\n      const fileList = (event.target as HTMLInputElement | null)?.files;\n      const file = fileList?.item(0);\n      if (!file) {\n        throw new Error(`Expected file to be uploaded, found none`);\n      }\n\n      const loadJson = (json: string) => {\n        try {\n          const data = JSON.parse(json);\n          data.__originalFilename = file.name;\n          console.log(data);\n          onSaveLoaded(data);\n        } catch (error) {\n          setError(error);\n          throw error;\n        }\n      }\n\n      if (/\\.json$/.test(file.name)) {\n        const reader = new FileReader();\n        reader.readAsText(file, \"utf-8\");\n        reader.onload = (_event) => {\n          loadJson(reader.result as string);\n        }\n      } else if (/\\.timber$/.test(file.name)) {\n        new JSZip().loadAsync(file).then((zip) => {\n          const file = Object.values(zip.files)[0];\n          return file.async(\"string\");\n        }).then((json) => {\n          loadJson(json);\n        }).catch((error) => {\n          setError(error);\n          throw error;\n        });\n      }\n    } catch (error) {\n      setError(error);\n      throw error;\n    }\n  }, [onSaveLoaded, setError]);\n\n  const loadExample = useCallback((filename: string, data: DemoSave) => {\n    data.__originalFilename = filename;\n    onSaveLoaded(deepCopy(data));\n  }, [onSaveLoaded]);\n\n  return <div className=\"container my-4\">\n    <div className=\"row\">\n      <div className=\"col-md-6 offset-md-3\">\n        <div className=\"card\">\n          <label className=\"card-body\">\n            <small className=\"text-danger\">A very unofficial &amp; third-party</small>\n            <h1 className=\"card-title\">Timberborn Save Editor</h1>\n            <div className=\"mb-3 mt-4\">\n              <span className=\"form-label\">Upload your save file to start</span>\n              <input type=\"file\" name=\"save\" accept=\".json,.timber\" onInput={onInput} className=\"form-control\" />\n              {error\n                ? <small className=\"form-text\">{`#{error}`}</small>\n                : <small className=\"form-text\">Default directory: <code>%USERPROFILE%\\Documents\\Timberborn\\Saves\\</code></small>}\n            </div>\n            <b>Now works with <code>.timber</code> files!</b>\n          </label>\n          <div className=\"card-body\">\n            <small className=\"form-text\">Or load an example save</small>\n            <br />\n            <button className=\"btn btn-link\" onClick={(e) => loadExample(\"iron-teeth-plains-1-1.json\", exampleIronTeeth)}>Iron Teeth 1-1 Plains 256x256</button>\n            <button className=\"btn btn-link\" onClick={(e) => loadExample(\"lets-play-plains.json\", exmapleLetsPlay)}>Lets Play Plains 256x256</button>\n          </div>\n        </div>\n        <div className=\"p-2 text-center\">\n          <small className=\"form-text\">\n            This editor is made by <a href=\"https://bonaroo.nl/\" rel=\"noreferrer\" target=\"_blank\">Charper Bonaroo BV</a> and is not officially\n            supported by Timberborn. Charper Bonaroo BV is not affiliated with Mechanistry.\n            <br />\n            <br />\n            <a className=\"btn btn-sm btn-link\" rel=\"noreferrer\" href=\"https://github.com/charperbonaroo/timberborn-save-editor\" target=\"_blank\">Github</a>\n            {\" \"}\n            <a className=\"btn btn-sm btn-link\" href=\"mailto:toby@bonaroo.nl\">Contact</a>\n            {\" \"}\n            <span className=\"btn-sm\" style={{ display: \"inline-block\", lineHeight: \"1.5\", verticalAlign: \"middle\" }}>Discord: <b>gamebuster800#2213</b></span>\n          </small>\n        </div>\n        <div className=\"text-muted\" style={{ fontFamily: \"monospace\", fontSize: \"10pt\" }}>\n          <p>\n            <b>Changelog</b>\n          </p>\n          <p>\n            <b>2023-03-11</b>\n          </p>\n          <p>\n            Thank you for using this tool. You can request features or bugfixes via Github!\n            We're not playing Timberborn ourselves at this moment, so please do let us know\n            about any issues!\n          </p>\n          <ul>\n            <li>Change \"Finish\" behavior to prevent the game from crashing sometimes</li>\n            <li>Add \"Finish All\" button</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n}\n","import { DemoSave } from \"./DemoSave\";\n\nexport function Navbar({ saveData, onHome }: { saveData?: DemoSave, onHome: () => void }) {\n  return <nav className=\"navbar navbar-light bg-light\">\n    <div className=\"container\">\n    {// eslint-disable-next-line\n    }<a href=\"#\" onClick={(e) => { e.preventDefault(); onHome(); }} className=\"navbar-brand\">Timberborn Save Editor</a>\n    </div>\n  </nav>\n}\n","/*eslint-disable*/\n\n/**\n * Fast UUID generator, RFC4122 version 4 compliant.\n * @author Jeff Ward (jcward.com).\n * @license MIT license\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n **/\n\nconst lut: string[] = [];\nfor (var i=0; i<256; i++) { lut[i] = (i<16?'0':'')+(i).toString(16); }\n\nexport function UUID() {\n  var d0 = Math.random()*0xffffffff|0;\n  var d1 = Math.random()*0xffffffff|0;\n  var d2 = Math.random()*0xffffffff|0;\n  var d3 = Math.random()*0xffffffff|0;\n  return lut[d0&0xff]+lut[d0>>8&0xff]+lut[d0>>16&0xff]+lut[d0>>24&0xff]+'-'+\n    lut[d1&0xff]+lut[d1>>8&0xff]+'-'+lut[d1>>16&0x0f|0x40]+lut[d1>>24&0xff]+'-'+\n    lut[d2&0x3f|0x80]+lut[d2>>8&0xff]+'-'+lut[d2>>16&0xff]+lut[d2>>24&0xff]+\n    lut[d3&0xff]+lut[d3>>8&0xff]+lut[d3>>16&0xff]+lut[d3>>24&0xff];\n}\n","import { createContext } from \"react\";\nimport { DemoSave } from \"./DemoSave\";\n\nexport const SaveContext = createContext<{ saveData: DemoSave }>(undefined as any);\n","import { sample } from \"lodash\";\nimport { DemoSave, UnknownEntity } from \"./DemoSave\";\nimport { UUID } from \"./util/UUID\";\n\nexport const BeaverUtil = {\n  setAge(saveData: DemoSave, beaver: UnknownEntity, age: number) {\n    const dayNumber = saveData.Singletons.DayNightCycle.DayNumber;\n    (beaver.Components.Character as any).DayOfBirth = Math.floor(dayNumber - age);\n  },\n\n  /**\n   * Set the default needs for a beaver\n   * @param beaver\n   */\n  setDefaultNeeds(beaver: UnknownEntity): void {\n    beaver.Components.MortalNeeder = { DeathDays: [] };\n    for (const need of (beaver.Components.NeedManager as any).Needs) {\n      if ([\"Hunger\", \"Thirst\", \"Sleep\"].includes(need.Name)) {\n        need.Points = 1.0;\n      }\n    }\n  },\n\n  setDefaultName(saveData: DemoSave, beaver: UnknownEntity): void {\n    const names = saveData.Singletons.BeaverNameService.Names;\n    (beaver.Components.Character as any).Name = sample(names);\n  },\n\n  setName(beaver: UnknownEntity, name: string): void {\n    (beaver.Components.Character as any).Name = name;\n  },\n\n  reset(beaver: UnknownEntity) {\n    beaver.Id = UUID();\n    BeaverUtil.setDefaultNeeds(beaver);\n    Object.assign(beaver.Components, {\n      BehaviorManager: {\n        RunningBehaviorId: \"HomelessRootBehavior\",\n        RunningBehaviorOwner: beaver.Id,\n        ReturnToBehavior: false,\n        TimestampedBehaviorLog: [\n          \"HomelessRootBehavior 1.00\"\n        ]\n      },\n      Dweller: {},\n      Worker: {},\n    });\n  }\n}\n","import { sample, sortBy } from \"lodash\";\nimport { useCallback, useState, useMemo } from \"react\";\nimport { BeaverUtil } from \"../BeaverUtil\";\nimport { deepCopy } from \"../deepCopy\";\nimport { DemoSave, DemoSaveEntity, UnknownEntity } from \"../DemoSave\";\nimport { IEditorPlugin } from \"../IEditorPlugin\";\n\nexport const BeaverCopier: IEditorPlugin<DemoSave, DemoSave> = {\n  id: \"BeaverCopier\",\n  name: \"Beaver copier\",\n  group: \"Beavers\",\n  position: 1,\n  enabled: true,\n\n  read(saveData) {\n    return saveData;\n  },\n\n  write(saveData, data) {\n    return data;\n  },\n\n  Preview({ saveData }) {\n    return <BeaverStatus entities={saveData.Entities} />;\n  },\n\n  Editor({ initialData, onClose, onSubmit }) {\n    const [beavers, setBeavers] = useState(() => initialData.Entities.filter(_ => _.Template === \"BeaverChild\" || _.Template === \"BeaverAdult\"))\n    const [page, setPage] = useState(0);\n    const [pageSize, setPageSize] = useState(25);\n    const [targetAmount, setTargetAmount] = useState(70);\n    const [beaverId, setBeaverId] = useState<string | null>(null);\n\n    const sortedBeavers = sortBy(beavers.slice(), _ => -(_ as any).Components.Character.DayOfBirth);\n\n    const offset = page * pageSize;\n\n    const copyBeaver = useCallback((beaver: UnknownEntity) => {\n      const newBeaver = deepCopy(beaver);\n      BeaverUtil.reset(newBeaver);\n      BeaverUtil.setDefaultName(initialData, newBeaver);\n      if (newBeaver.Template === \"BeaverAdult\") {\n        BeaverUtil.setAge(initialData, beaver, 5)\n      }\n      return newBeaver;\n    }, [initialData]);\n\n    const duplicate = useCallback((beaver: UnknownEntity) => {\n      setBeavers(beavers.slice().concat([copyBeaver(beaver)]));\n    }, [beavers, setBeavers, copyBeaver]);\n\n    const doSubmit = useCallback(() => {\n      const Entities = initialData.Entities\n        .filter(_ => _.Template !== \"BeaverChild\" && _.Template !== \"BeaverAdult\")\n        .concat(beavers);\n\n      onSubmit({ ...initialData, Entities });\n    }, [onSubmit, beavers, initialData]);\n\n    const hasNextPage = pageSize + offset < beavers.length;\n\n    const doSetBeaverCount = useCallback(() => {\n      const adults = beavers.filter(_ => _.Template === \"BeaverAdult\");\n      const newBeavers = beavers.slice();\n      for (const beaver of newBeavers) {\n        BeaverUtil.setDefaultNeeds(beaver);\n      }\n      while (newBeavers.length < targetAmount) {\n        newBeavers.push(copyBeaver(sample(adults)!));\n      }\n      setBeavers(newBeavers);\n    }, [beavers, targetAmount, copyBeaver]);\n\n    const editingBeaver = useMemo(() => beavers.find(_ => _.Id === beaverId), [beavers, beaverId]);\n\n    const updateBeaver = useCallback((patch: any) => {\n      const index = beavers.findIndex(_ => _.Id === beaverId);\n      const newBeaver = deepCopy(beavers[index]);\n      if (patch.Name) {\n        BeaverUtil.setName(newBeaver, patch.Name);\n      }\n      const newBeavers = beavers.slice();\n      newBeavers[index] = newBeaver;\n      setBeavers(newBeavers);\n    }, [beaverId, beavers]);\n\n    return <div className=\"container my-4\">\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h1 className=\"card-title\">Beaver Copier</h1>\n          <div className=\"d-flex\">\n            <div>\n              <BeaverStatus entities={beavers} />\n            </div>\n            <div className=\"ms-auto\">\n              <button type=\"button\" onClick={onClose} className=\"btn btn-light\">Discard changes</button>\n              {\" \"}\n              <button type=\"button\" onClick={doSubmit} className=\"btn btn-primary\">Submit</button>\n            </div>\n          </div>\n          <div className={[\"collapse\", beaverId ? \"show\" : \"\"].join(\" \")}>\n            {beaverId && <BeaverEditor beaver={editingBeaver} updateBeaver={updateBeaver} />}\n          </div>\n        </div>\n        <table className=\"table my-0\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Age <small style={{ fontWeight: \"normal\" }}>a-z</small></th>\n              <th>Coordinates</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {sortedBeavers.slice(offset, offset + pageSize).map((beaver: any) => <tr key={beaver.Id}>\n              <td>{beaver.Components.Character.Name}</td>\n              <td>{initialData.Singletons.DayNightCycle.DayNumber - beaver.Components.Character.DayOfBirth} {beaver.Template === \"BeaverChild\" ? <small>(child)</small> : null}</td>\n              <td>\n                x: <b>{Math.round(beaver.Components.Character.Position.X)}</b>{\" \"}\n                y: <b>{Math.round(beaver.Components.Character.Position.Y)}</b>{\" \"}\n                z: <b>{Math.round(beaver.Components.Character.Position.Z)}</b>{\" \"}\n              </td>\n              <td className=\"text-end py-1\">\n                <button type=\"button\" onClick={() => setBeaverId(beaver.Id)} className=\"btn btn-light btn-sm\">Edit</button>\n                <button type=\"button\" className=\"btn btn-light btn-sm\" onClick={() => duplicate(beaver)}>Copy</button>\n              </td>\n            </tr>)}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colSpan={4} className=\"py-1\">\n                <div className=\"d-flex\">\n                  <div className=\"me-auto\">\n                    Showing <strong>{offset}</strong> - <strong>{Math.min(beavers.length, offset + pageSize)}</strong> of <strong>{beavers.length}</strong>\n                  </div>\n                  <form className=\"me-3 d-flex\" onSubmit={(event) => { event.preventDefault(); doSetBeaverCount(); }}>\n                    <label className=\"form-label me-1 mt-1 mb-0\" htmlFor=\"addRandom\">Set beavers</label>\n                    <input type=\"number\" id=\"addRandom\" className=\"form-control form-control-sm\" value={targetAmount}\n                      onChange={(event) => { setTargetAmount(parseInt(event.target.value, 10)) }} width={3} style={{ width: 80 }} />\n                    <button type=\"submit\" className=\"ms-1 btn btn-primary btn-sm\">Set</button>\n                  </form>\n                  <div className=\"me-3 d-flex\">\n                    <label className=\"form-label me-1 mt-1 mb-0\" htmlFor=\"pageSize\">Pagesize</label>\n                    <select id=\"pageSize\" className=\"form-control form-control-sm\" value={pageSize} onChange={(event) => { setPage(0); setPageSize(parseInt(event.target.value, 10)) }}>\n                      <option>10</option>\n                      <option>25</option>\n                      <option>100</option>\n                      <option>250</option>\n                      <option>1000</option>\n                      <option value={`${Number.MAX_SAFE_INTEGER}`}>ALL</option>\n                    </select>\n                  </div>\n                  <div>\n                    <button className=\"btn btn-sm btn-light\" disabled={page <= 0} onClick={() => setPage(page - 1)}>&lsaquo; prev</button>\n                    {\" \"}\n                    <button className=\"btn btn-sm btn-light\" disabled={!hasNextPage} onClick={() => setPage(page + 1)}>next &rsaquo;</button>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>;\n  }\n}\n\nfunction BeaverStatus({ entities }: { entities: DemoSaveEntity[] }) {\n  const { adultCount, childCount } = entities.reduce((acc, entity) => {\n    if (entity.Template === \"BeaverAdult\") {\n      acc.adultCount++;\n    }\n    if (entity.Template === \"BeaverChild\") {\n      acc.childCount++;\n    }\n    return acc;\n  }, { adultCount: 0, childCount: 0 })\n\n  const sum = adultCount + childCount;\n\n  return <span>You have <strong>{sum}</strong> beavers: <strong>{childCount}</strong> kits and <strong>{adultCount}</strong> adults.</span>;\n}\n\nfunction BeaverEditor({ beaver, updateBeaver }: { beaver?: any, updateBeaver: (patch: any) => void }) {\n  const [beaverData, setBeaverData] = useState(deepCopy(beaver.Components.Character));\n  const onSubmit = useCallback((e) => {\n    e.preventDefault();\n    updateBeaver(beaverData);\n  }, [beaverData, updateBeaver]);\n\n  const updateBeaverData = useCallback((property: string, value: any) => {\n    setBeaverData({ ...beaverData, [property]: value });\n  }, [beaverData]);\n\n  if (!beaver) return <div className=\"text-danger p-1\">Invalid beaver selected!</div>;\n\n  return <>\n    <h2>Edit beaver</h2>\n    <form className=\"my-3 d-flex\" onSubmit={onSubmit}>\n      <label className=\"form-label me-1 mt-1 mb-0\" htmlFor=\"beaverEditName\">Name</label>\n      <input className=\"form-control form-control-sm\" id=\"beaverEditName\" value={beaverData.Name} minLength={1} onChange={(e) => updateBeaverData(\"Name\", e.target.value)} />\n      <button name=\"submit\" type=\"submit\" className=\"btn btn-primary btn-sm ms-auto\">Update</button>\n    </form>\n  </>;\n}\n","import { DemoSave, UnknownEntity } from \"./DemoSave\";\n\ninterface StockpileGoodsEntry {\n  Good: { Id: string };\n  Amount: number;\n}\n\nconst stockpileTypes = [{\n  id: \"LargeWaterTank.Folktails\",\n  capacity: 300,\n}, {\n  id: \"SmallWaterTank.Folktails\",\n  capacity: 30\n}, {\n  id: \"SmallWarehouse.Folktails\",\n  capacity: 200,\n}, {\n  id: \"SmallWarehouseNew.Folktails\",\n  capacity: 30,\n}, {\n  id: \"LogPile.Folktails\",\n  capacity: 180,\n}, {\n  id: \"UndergroundWarehouse.Folktails\",\n  capacity: 4000,\n}, {\n  id: \"LargeWarehouse.Folktails\",\n  capacity: 1000,\n}, {\n  id: \"SmallWarehouse.IronTeeth\",\n  capacity: 200,\n}, {\n  id: \"SmallWarehouseNew.IronTeeth\",\n  capacity: 30,\n}, {\n  id: \"SmallWaterTank.IronTeeth\",\n  capacity: 30,\n}, {\n  id: \"LargeWaterTank.IronTeeth\",\n  capacity: 300,\n}, {\n  id: \"IndustrialLogPile.IronTeeth\",\n  capacity: 180,\n}, {\n  id: \"LargeWarehouse.IronTeeth\",\n  capacity: 1000,\n}, {\n  id: \"MediumWarehouse.Folktails\",\n  capacity: 200\n}, {\n  id: \"MediumWarehouse.IronTeeth\",\n  capacity: 200\n}];\n\nconst stockpileIds = stockpileTypes.map(_ => _.id)\n\nexport const StockpileUtil = {\n  stockpileTypes,\n  stockpileIds,\n  getCapacity: (stockpile: UnknownEntity) => stockpileTypes.find(_ => _.id === stockpile.Template)?.capacity,\n  getStockpiles: (saveData: DemoSave) => saveData.Entities.filter(_ => _.Components[\"Inventory:Stockpile\"]),\n  countGoods: (stockpile: UnknownEntity, accumulator = {} as Record<string, number>) => (((stockpile.Components[\"Inventory:Stockpile\"] as any)?.Storage?.Goods || []) as StockpileGoodsEntry[])\n    .reduce((acc, { Good, Amount }) => ({ ...acc, [Good.Id]: Amount + (acc[Good.Id] || 0) }), accumulator)\n}\n","import { StockpileUtil } from \"./StockpileUtil\";\n\nexport const entities = {\n  PATH_ENTITIES: [\n    \"Path.Folktails\",\n    \"Path.IronTeeth\",\n    \"Slope\",\n    \"WoodenStairs.Folktails\",\n    \"WoodenStairs.IronTeeth\",\n    \"DistrictGate.Folktails\",\n    \"DistrictGate.IronTeeth\",\n  ],\n\n  PLATFORM_ENTITIES: [\n    \"Platform.Folktails\",\n    \"Platform.IronTeeth\",\n    \"DoublePlatform.Folktails\",\n    \"DoublePlatform.IronTeeth\",\n    \"TriplePlatform.Folktails\",\n    \"TriplePlatform.IronTeeth\",\n    \"MetalPlatform.Folktails\",\n    \"MetalPlatform.IronTeeth\",\n    \"LargeMetalPlatform.IronTeeth\",\n  ],\n\n  BRIDGE_ENTITIES: [\n    \"SuspensionBridge1x1.Folktails\",\n    \"SuspensionBridge1x1.IronTeeth\",\n    \"SuspensionBridge2x1.Folktails\",\n    \"SuspensionBridge2x1.IronTeeth\",\n    \"SuspensionBridge3x1.Folktails\",\n    \"SuspensionBridge3x1.IronTeeth\",\n    \"SuspensionBridge4x1.Folktails\",\n    \"SuspensionBridge4x1.IronTeeth\",\n    \"SuspensionBridge5x1.Folktails\",\n    \"SuspensionBridge5x1.IronTeeth\",\n    \"SuspensionBridge6x1.Folktails\",\n    \"SuspensionBridge6x1.IronTeeth\",\n  ],\n\n  WOOD_ENTITIES: [\n    \"WoodWorkshop.Folktails\",\n    \"WoodWorkshop.IronTeeth\",\n    \"TappersShack.Folktails\",\n    \"TappersShack.IronTeeth\",\n    \"PaperMill.Folktails\",\n    \"PaperMill.IronTeeth\",\n    \"PrintingPress.Folktails\",\n    \"PrintingPress.IronTeeth\",\n    \"GearWorkshop.Folktails\",\n    \"GearWorkshop.IronTeeth\",\n    \"Forester.Folktails\",\n    \"Forester.IronTeeth\",\n    \"LumberMill.Folktails\",\n    \"LumberMill.IronTeeth\",\n  ],\n\n  POWER_ENTITIES: [\n    \"Windmill.Folktails\",\n    \"LargeWindmill.Folktails\",\n    \"WaterWheel.Folktails\",\n    \"PowerWheel.Folktails\",\n    \"PowerWheel.IronTeeth\",\n    \"Engine.IronTeeth\",\n    \"CompactWaterWheel.IronTeeth\",\n    \"LargeWaterWheel.IronTeeth\",\n    \"PowerShaftStraight.Folktails\",\n    \"PowerShaftStraight.IronTeeth\",\n    \"PowerShaftTShapedIntersection.Folktails\",\n    \"PowerShaftTShapedIntersection.IronTeeth\",\n    \"PowerShaftIntersection.Folktails\",\n    \"PowerShaftIntersection.IronTeeth\",\n    \"PowerShaftHigh.Folktails\",\n    \"PowerShaftHigh.IronTeeth\",\n    \"PowerShaftTurn.Folktails\",\n    \"PowerShaftTurn.IronTeeth\",\n  ],\n\n  WATER_ENTITIES: [\n    \"Levee.Folktails\",\n    \"Levee.IronTeeth\",\n    \"Dam.Folktails\",\n    \"Dam.IronTeeth\",\n    \"WaterDump.Folktails\",\n    \"WaterDump.IronTeeth\",\n    \"DeepWaterPump.IronTeeth\",\n    \"Floodgate.Folktails\",\n    \"Floodgate.IronTeeth\",\n    \"DoubleFloodgate.Folktails\",\n    \"DoubleFloodgate.IronTeeth\",\n    \"TripleFloodgate.Folktails\",\n    \"TripleFloodgate.IronTeeth\",\n    \"IrrigationTower.Folktails\",\n    \"MechanicalWaterPump.Folktails\",\n    \"DeepMechanicalWaterPump.IronTeeth\",\n    \"StreamGauge.Folktails\",\n    \"StreamGauge.Ironteeth\",\n  ],\n  LANDSCAPING_ENTITIES: [\n    \"Dynamite.Folktails\",\n    \"Dynamite.IronTeeth\",\n    \"ExplosivesFactory.Folktails\",\n    \"ExplosivesFactory.IronTeeth\",\n  ],\n  FOOD_ENTITIES: [\n    \"Bakery.Folktails\",\n    \"Bakery.IronTeeth\",\n    \"Grill.Folktails\",\n    \"Grill.IronTeeth\",\n    \"FarmHouse.Folktails\",\n    \"FarmHouse.IronTeeth\",\n    \"GathererFlag.Folktails\",\n    \"GathererFlag.IronTeeth\",\n    \"Beehive.Folktails\",\n    \"Gristmill.Folktails\",\n    \"Gristmill.IronTeeth\",\n    \"AquaticFarmhouse.Folktails\",\n    \"AquaticFarmhouse.IronTeeth\",\n  ],\n  METAL_ENTITIES: [\n    \"ScavengerFlag.Folktails\",\n    \"ScavengerFlag.IronTeeth\",\n    \"Smelter.Folktails\",\n    \"Smelter.IronTeeth\",\n    \"Mine.Folktails\",\n    \"Mine.IronTeeth\",\n  ],\n  HOUSING_ENTITIES: [\n    \"Lodge.Folktails\",\n    \"FlippedLodge.Folktails\",\n    \"DoubleLodge.Folktails\",\n    \"TripleLodge.Folktails\",\n    \"MiniLodge.Folktails\",\n    \"Barrack.IronTeeth\",\n    \"LargeBarrack.IronTeeth\",\n    \"LargeRowhouse.IronTeeth\",\n    \"Rowhouse.IronTeeth\",\n  ],\n  SCIENTE_ENTITIES: [\n    \"Inventor.Folktails\",\n    \"Inventor.IronTeeth\",\n    \"Observatory.Folktails\",\n    \"Observatory.IronTeeth\",\n  ],\n  LEISURE_ENTITIES: [\n    \"MudBath.Folktails\",\n    \"MudBath.IronTeeth\",\n    \"Campfire.Folktails\",\n    \"Campfire.IronTeeth\",\n    \"RooftopTerrace.Folktails\",\n    \"RooftopTerrace.IronTeeth\",\n    \"Shrine.Folktails\",\n    \"Shrine.IronTeeth\",\n    \"Lido.Folktails\",\n    \"Lido.IronTeeth\",\n    \"Temple.Folktails\",\n    \"Temple.IronTeeth\",\n    \"Carousel.Folktails\",\n    \"Carousel.IronTeeth\",\n  ],\n  DECORATION_ENTITIES: [\n    \"Bell.IronTeeth\",\n    \"MetalFence.Folktails\",\n    \"MetalFence.IronTeeth\",\n    \"PlankFence.Folktails\",\n    \"PlankFence.IronTeeth\",\n    \"LogFence.Folktails\",\n    \"LogFence.IronTeeth\",\n    \"BeaverStatue.Folktails\",\n    \"BeaverStatue.IronTeeth\",\n    \"Roof1x1.Folktails\",\n    \"Roof1x1.IronTeeth\",\n    \"Roof1x2.Folktails\",\n    \"Roof1x2.IronTeeth\",\n    \"Roof2x2.Folktails\",\n    \"Roof2x2.IronTeeth\",\n    \"Roof2x3.Folktails\",\n    \"Roof2x3.IronTeeth\",\n    \"Roof3x2.Folktails\",\n    \"Roof3x2.IronTeeth\",\n    \"Shrub.Folktails\",\n    \"Shrub.IronTeeth\",\n    \"Bench.Folktails\",\n    \"Bench.IronTeeth\",\n    \"Scarecrow.Folktails\",\n  ],\n  MONUMENT_ENTITIES: [\n    \"TributeToIngenuity.Folktails\",\n    \"TributeToIngenuity.IronTeeth\",\n    \"FlameOfProgress.Folktails\",\n    \"FlameOfProgress.IronTeeth\",\n    \"LaborerMonument.Folktails\",\n    \"LaborerMonument.IronTeeth\",\n  ],\n  LABOR_ENTITIES: [\n    \"DistributionPost.Folktails\",\n    \"DistributionPost.IronTeeth\",\n    \"BuildersHut.Folktails\",\n    \"BuildersHut.IronTeeth\",\n    \"HaulingPost.Folktails\",\n    \"HaulingPost.IronTeeth\",\n  ],\n\n  STORAGE_ENTITIES: StockpileUtil.stockpileTypes.map(({ id }) => id),\n\n  TREE_ENTITIES: [\"Maple\", \"Pine\", \"Birch\"],\n  BEAVER_ENTITIES: [\"BeaverAdult\", \"BeaverChild\"],\n};\n\nexport const ALL_ENTITIES = Object.values(entities).flat();\n\nexport const buildingCategories = {\n  \"Paths and Structures\": [\n    ...entities.PATH_ENTITIES,\n    ...entities.PLATFORM_ENTITIES,\n    ...entities.BRIDGE_ENTITIES,\n  ],\n  Power: entities.POWER_ENTITIES,\n  Water: entities.WATER_ENTITIES,\n  Landscaping: entities.LANDSCAPING_ENTITIES,\n  Food: entities.FOOD_ENTITIES,\n  Metal: entities.METAL_ENTITIES,\n  Housing: entities.HOUSING_ENTITIES,\n  Science: entities.SCIENTE_ENTITIES,\n  Leisure: entities.LEISURE_ENTITIES,\n  Decoration: entities.DECORATION_ENTITIES,\n  Monuments: entities.MONUMENT_ENTITIES,\n  Labor: entities.LABOR_ENTITIES,\n  Storage: entities.STORAGE_ENTITIES,\n  Trees: entities.TREE_ENTITIES,\n};\n\nconst getSpeciesEntities = (species: string) => {\n  Object.values(entities)\n    .flat()\n    .filter((entity) => entity.includes(species));\n};\nexport const IRONTEETH_ENTITIES = getSpeciesEntities(\"IronTeeth\");\nexport const FOLKTAILS_ENTITIES = getSpeciesEntities(\"Folktails\");\n","import { DemoSave, UnknownEntity } from \"./DemoSave\";\nimport { buildingCategories } from \"./allEntities\";\n\ninterface ConstructibleEntity {\n  Id: string;\n  Template: string;\n  Components: {\n    BlockObject: {\n      Coordinates: {\n        X: number;\n        Y: number;\n        Z: number;\n      };\n    };\n    Constructible: {\n      Finished: boolean;\n    };\n    ConstructionSite: {\n      BuildTimeProgressInHoursKey: number;\n    };\n    \"Inventory:ConstructionSite\"?: {\n      Storage: {\n        Goods: {\n          Ammount: number;\n          Good: any;\n        }[];\n      };\n    };\n    [key: string]: any;\n  };\n}\n\nconst buildingTypes = new Map<string, string>(\n  Object.entries(buildingCategories)\n    .map(([type, buildings]) => buildings.map((building) => [building, type]))\n    .flat() as [string, string][]\n);\n\nexport const ConstructionUtil = {\n  entityFilter: (entity: UnknownEntity) =>\n    !!entity.Components.Constructible &&\n    !(entity.Components.Constructible as any).Finished,\n  reverseEntityFilter: (entity: UnknownEntity) =>\n    !entity.Components.Constructible ||\n    (entity.Components.Constructible as any).Finished,\n  getConstructionSites: (saveData: DemoSave) =>\n    saveData.Entities.filter(\n      ConstructionUtil.entityFilter\n    ) as ConstructibleEntity[],\n  getBuildingType: (constructionSite: ConstructibleEntity | string) => {\n    const template =\n      typeof constructionSite === \"string\"\n        ? constructionSite\n        : constructionSite.Template;\n    return buildingTypes.get(template) || \"Other\";\n  },\n  finishConstruction: (constructionSite: ConstructibleEntity): void => {\n    constructionSite.Components.Constructible.Finished = true;\n    if (constructionSite.Components.ConstructionSite) {\n      constructionSite.Components.ConstructionSite.BuildTimeProgressInHoursKey = 1;\n    }\n  },\n  finishAllConstruction: (saveData: DemoSave): void => {\n    saveData.Entities.forEach((entity) => {\n      if (\n        !!entity.Components.Constructible &&\n        !(entity.Components.Constructible as any).Finished\n      )\n        ConstructionUtil.finishConstruction(entity as ConstructibleEntity);\n    });\n  },\n};\n","import React, { useMemo, useState, Fragment, useCallback } from \"react\";\nimport { assign, chunk, concat, fill, groupBy, toPairs, uniq } from \"lodash\";\nimport { DemoSave } from \"../DemoSave\";\nimport { deepCopy } from \"../deepCopy\";\nimport { IEditorPlugin } from \"../IEditorPlugin\";\nimport { ConstructionUtil } from \"../ConstructionUtil\";\n\ninterface BuildingSort {\n  column: string;\n  descending: boolean;\n}\ninterface BuildingFilter {\n  column: string;\n  value: string;\n}\ninterface BuildingData {\n  Template: string;\n  type: string;\n  Id: string;\n  coords: {\n    X: number;\n    Y: number;\n    Z: number;\n  };\n  finished: boolean;\n}\ntype BuildingDataDict = { [id: string]: BuildingData[] };\n\nexport const ConstructionPlugin: IEditorPlugin<DemoSave, DemoSave> = {\n  id: \"ConstructionPlugin\",\n  name: \"Manage active constructions\",\n  group: \"Construction\",\n  position: 10,\n  enabled: true,\n\n  read: (save) => save,\n  write: (_, data) => data,\n\n  Preview: ({ saveData }) => {\n    (window as any).__saveData = saveData;\n    console.log(saveData);\n    const constructionSites = useMemo(() => ConstructionUtil.getConstructionSites(saveData), [saveData]);\n\n    const constructionGroups = useMemo(() => {\n      const groups: Record<string, number> = {};\n      Object.entries(groupBy(constructionSites, (_) => _.Template)).forEach(([template, sites]) => {\n        const type = ConstructionUtil.getBuildingType(template);\n        if (type === \"Other\") console.log(template);\n        groups[type] = (groups[type] || 0) + sites.length;\n      });\n      return groups;\n    }, [constructionSites]);\n\n    return <>\n      <span>You have <strong>{constructionSites.length}</strong> construction sites.</span>\n      <ConstructionTypesTable counts={constructionGroups} />\n    </>;\n  },\n\n  Editor: ({ initialData, onClose, onSubmit }) => {\n    const [sort, setSort] = useState<BuildingSort>({ column: \"type\", descending: false });\n    const [filter, setFilter] = useState<BuildingFilter>({ column: \"\", value: \"none\" });\n    const [constructionSites, setConstructionSites] = useState(() => deepCopy(ConstructionUtil.getConstructionSites(initialData)));\n    const buildingData = useMemo<BuildingDataDict>(() =>\n      groupBy(constructionSites.map(({ Template, Id, Components }) =>\n        ({ Template, type: ConstructionUtil.getBuildingType(Template), Id, coords: Components.BlockObject.Coordinates, finished: Components.Constructible.Finished } as BuildingData)\n      ).sort((a, b) => a.Template.localeCompare(b.Template)), ({ type }) => type) as BuildingDataDict, [constructionSites]\n    );\n    const sortedAndFiltered = useMemo(() => {\n      const { column, descending } = sort;\n      const { column: filterColumn, value } = filter || { column: \"\", value: \"none\" };\n\n      let filtered: BuildingData[] | null = null;\n      switch (filterColumn) {\n        case \"type\":\n          filtered = buildingData[value];\n          break;\n        case \"building\":\n          const type = ConstructionUtil.getBuildingType(value);\n          filtered = buildingData[type].filter((_) => _.Template === value);\n          break;\n        default:\n          filtered = Object.values(buildingData).flat();\n      }\n\n      switch (column) {\n        case \"type\":\n          return filtered.sort((a, b) => (descending ? b : a).type.localeCompare((descending ? a : b).type));\n        case \"building\":\n          return filtered.sort((a, b) => (descending ? b : a).Template.localeCompare((descending ? a : b).Template));\n        default:\n          return filtered;\n      }\n    }, [buildingData, sort, filter]);\n\n    const toggleSort = useCallback((column: \"type\" | \"building\", sort: BuildingSort) => {\n      if (sort.column === column) {\n        setSort({ ...sort, descending: !sort.descending });\n        return;\n      }\n      setSort({ column, descending: false });\n    }, []);\n\n    const finishBuildingConstruction = useCallback((e) => {\n      const itemId: string = e.currentTarget.parentNode.parentNode.id;\n      const newSites = constructionSites.slice();\n      const index = newSites.findIndex((_) => _.Id === itemId);\n\n      if (index !== -1) {\n        ConstructionUtil.finishConstruction(newSites[index]);\n        setConstructionSites(newSites);\n      }\n    }, [constructionSites]);\n\n    const finishAll = useCallback((e) => {\n      const newSites = constructionSites.slice();\n      for (const info of sortedAndFiltered) {\n        const index = newSites.findIndex((_) => _.Id === info.Id);\n        if (index !== -1) {\n          ConstructionUtil.finishConstruction(newSites[index]);\n        }\n      }\n      setConstructionSites(newSites);\n    }, [sortedAndFiltered, constructionSites]);\n\n    const doSubmit = useCallback(() => {\n      const Entities = initialData.Entities\n        .filter(ConstructionUtil.reverseEntityFilter)\n        .concat(constructionSites);\n      onSubmit({ ...initialData, Entities });\n    }, [onSubmit, constructionSites, initialData]);\n\n    return <div className=\"container my-4\">\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h1 className=\"card-title\">Manage construction sites</h1>\n          <div className=\"d-flex\">\n            <span>You have <strong>{constructionSites.length}</strong> construction sites.{filter.column && <> <strong>{sortedAndFiltered.length}</strong> are shown below.</>}</span>\n            <div className=\"ms-auto\">\n              <button type=\"button\" className=\"btn btn-light ms-auto\" onClick={onClose}>Discard changes</button>\n              {\" \"}\n              <button type=\"button\" className=\"btn btn-primary\" onClick={doSubmit}>Submit</button>\n            </div>\n          </div>\n          <div className=\"mt-3\">Be careful when finishing only some construction sites. Finishing buildings without finished buildings below it will result in floating buildings and other weird behaviors!</div>\n          <div className=\"d-flex mt-3\">\n            <ConstructionTableFilterForm onSubmit={setFilter} buildingData={buildingData} />\n            <div className=\"ms-auto\">\n              <label className=\"mb-2\">&nbsp;</label>\n              <button className=\"btn btn-primary d-block\" onClick={finishAll}>Finish all</button>\n            </div>\n          </div>\n        </div>\n        <table className=\"table my-0\">\n          <thead>\n            <tr>\n              <th aria-sort={(sort.column === \"\" && (sort.descending ? \"descending\" : \"ascending\")) || \"none\"}>\n                <span role=\"button\" onClick={() => toggleSort(\"building\", sort)}>Building{sort.column === \"building\" && <> <small style={{ fontWeight: \"normal\" }}>{sort.descending ? \"z-a\" : \"a-z\"}</small></>}</span>\n              </th>\n              <th aria-sort={(sort.column === \"\" && (sort.descending ? \"descending\" : \"ascending\")) || \"none\"}>\n                <span role=\"button\" onClick={() => toggleSort(\"type\", sort)}>Type{sort.column === \"type\" && <> <small style={{ fontWeight: \"normal\" }}>{sort.descending ? \"z-a\" : \"a-z\"}</small></>}</span>\n              </th>\n              <th>Coordinates</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {sortedAndFiltered.map(({ type, Template, Id, coords, finished }) => <tr key={Id} id={Id}>\n              <td>{Template}</td>\n              <td>{type}</td>\n              <td>\n                x: <b>{coords.X}</b>{\" \"}\n                y: <b>{coords.Y}</b>{\" \"}\n                z: <b>{coords.Z}</b>{\" \"}\n              </td>\n              <td className=\"text-end py-1\">\n                <button type=\"button\" className=\"btn btn-light btn-sm\" onClick={finishBuildingConstruction} disabled={finished}>Finish</button>\n              </td>\n            </tr>)}\n          </tbody>\n        </table>\n      </div>\n    </div >;\n  },\n};\n\nfunction ConstructionTypesTable({ counts }: { counts: Record<string, number> }) {\n  const countsTable = useMemo(() => {\n    let sorted = toPairs(counts);\n    const otherIndex = sorted.findIndex((_) => _[0] === \"Other\");\n    const other = otherIndex !== -1 ? sorted.splice(otherIndex, 1) : null;\n    sorted = sorted.sort(([a], [b]) => a.localeCompare(b));\n\n    return chunk(other ? concat(sorted, other) : sorted, 5).map((chunk, index) => <tr key={index}>\n      {assign(fill(new Array(5), [\"\", \"\"]), chunk).map(([label, value], i) => <Fragment key={i}>\n        <th style={{ width: \"17%\" }} className=\"text-end\">{label}</th>\n        <td style={{ width: \"3%\" }} className=\"text-end\">{value}</td>\n      </Fragment>)}\n    </tr>)\n  }, [counts]);\n\n  return <table className=\"table table-sm table-borderless my-0\">\n    <tbody>\n      {countsTable}\n    </tbody>\n  </table>;\n}\n\nfunction ConstructionTableFilterForm({ onSubmit, buildingData }: { onSubmit: (filter: BuildingFilter) => void, buildingData: BuildingDataDict }) {\n  const [filterType, setFilterType] = useState<\"type\" | \"building\" | \"none\">(\"none\");\n  const [filterValue, setFilterValue] = useState<string>(\"none\");\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    onSubmit(([filterType, filterValue].includes(\"none\") ? { column: \"\", value: \"none\" } : { column: filterType, value: filterValue }) as BuildingFilter);\n  };\n\n  const valueOptions = useMemo(() => {\n    switch (filterType) {\n      case \"type\":\n        return Object.values(buildingData).map((arr) => arr[0].type).sort((a, b) => a.localeCompare(b));\n      case \"building\":\n        return uniq(Object.values(buildingData).flat().map(({ Template }) => Template)).sort((a, b) => a.localeCompare(b));\n      default:\n        return [];\n    };\n  }, [buildingData, filterType]);\n\n  return <form onSubmit={handleSubmit}>\n    <div className=\"d-flex\">\n      <div className=\"me-1\">\n        <label htmlFor=\"selectFilterType\" className=\"mb-2\">Filter by..</label>\n        <select className=\"form-select\" id=\"selectFilterType\" onChange={(e) => setFilterType(e.target.value as \"type\" | \"building\" | \"none\")} value={filterType}>\n          <option value=\"none\" >None</option>\n          <option value=\"type\">Type</option>\n          <option value=\"building\">Building</option>\n        </select>\n      </div>\n      <div className=\"me-1\">\n        <label htmlFor=\"selectFilterValue\" className=\"mb-2\">With value..</label>\n        <select className=\"form-select\" id=\"selectFilterValue\" disabled={filterType === \"none\"} onChange={(e) => setFilterValue(e.target.value)} value={filterValue}>\n          <option value=\"none\" >None</option>\n          {valueOptions.map((value) => <option key={value} value={value}>{value}</option>)}\n        </select>\n      </div>\n      <div>\n        <label className=\"mb-2\">&nbsp;</label>\n        <button className=\"d-block btn btn-light\" disabled={!filterType || !filterValue}>Apply filter</button>\n      </div>\n    </div>\n  </form>;\n}\n","import { useEffect, useState } from \"react\";\nimport { DemoSave } from \"../DemoSave\";\nimport { IEditorPlugin } from \"../IEditorPlugin\";\nimport JSZip from \"jszip\";\n\nexport const DownloadPlugin: IEditorPlugin<DemoSave, DemoSave> = {\n  id: \"DownloadPlugin\",\n  name: \"Download\",\n  group: \"General\",\n  position: -Infinity,\n  enabled: true,\n\n  read(saveData) {\n    return saveData;\n  },\n\n  write(saveData, data) {\n    throw new Error(`Not implemented`);\n  },\n\n  Preview({ saveData }) {\n    return <strong>Click here to download your modified save!</strong>;\n  },\n\n  Editor({ initialData: saveData, onClose }) {\n    const [url, setUrl] = useState<string | null>(null);\n\n    useEffect(() => {\n      const json = JSON.stringify({\n        ...saveData,\n        GameVersion: saveData.GameVersion.replace(/-TSE$/, \"\") + \"-TSE\",\n        Editor: \"https://charperbonaroo.github.io/timberborn-save-editor/\",\n      });\n\n      const zip = new JSZip();\n      zip.file(\"world.json\", json);\n      zip.generateAsync({ type: \"blob\" }).then((blob) => {\n        setUrl(URL.createObjectURL(blob));\n      });\n    }, [saveData, url]);\n\n    const [filename, setFilename] = useState<string>(() => {\n      const now = new Date();\n      return `${saveData.__originalFilename.replace(\".timber\", \"\")} MODDED ${now.toISOString().substr(0, 10)} ${now.getHours()}h${now.getMinutes()}m.timber`;\n    });\n\n    return <div className=\"container\">\n      <div className=\"card my-4\">\n        <div className=\"card-body\">\n          <h1 className=\"card-title\">Download</h1>\n          <div className=\"my-3\">\n            <label htmlFor=\"filename\" className=\"form-label\">Filename</label>\n            <input type=\"text\" value={filename} onChange={(e) => setFilename(e.target.value)} id=\"filename\" className=\"form-control\" />\n          </div>\n          <div className=\"my-3 alert alert-warning\">\n            <strong>Warning:</strong> The <em>Timberborn Save Editor</em> is <strong>not\n              officially supported</strong> by Timberborn.\n            <br />\n            Savefiles generated by this tool can <strong>crash your game</strong>, <strong>cause bugs</strong>, or other <strong>weird stuff</strong>.\n            <br />\n            Some bugs, crashes or weird stuff might not be immediately clear and only be noticable later into your game.\n            <br />\n            <br />\n            If you encounter issues with the game after loading a savefile created by this tool,\n            please create a bug report <a href=\"https://github.com/charperbonaroo/timberborn-save-editor/issues\" target=\"_blank\" rel=\"noreferrer\">here</a> or\n            contact <a href=\"mailto:toby@bonaroo.nl\">me</a> directly.\n            <br />\n            <br />\n            If you accept these risks, use the Download button below. Enjoy the game!\n          </div>\n          <div className=\"d-flex\">\n            {url == null\n              ? <span className=\"btn btn-primary disabled\">Loading...</span>\n              : <a href={url!} download={filename.endsWith(\".timber\") ? filename : filename + \".timber\"} className=\"btn btn-primary\" onClick={() => onClose()}>Download</a>}\n            <button type=\"button\" className=\"btn btn-light ms-auto\" onClick={onClose}>Close</button>\n          </div>\n          <small className=\"form-text\">\n            Store your savefile in: <code>%USERPROFILE%\\Documents\\Timberborn\\Saves\\</code>\n          </small>\n        </div>\n      </div>\n    </div>;\n  }\n}\n","import { BeaverAdultEntity, DemoSave, UnknownEntity } from \"../DemoSave\";\nimport { IEditorPlugin } from \"../IEditorPlugin\";\nimport { Canvas } from '@react-three/fiber'\nimport { FormEvent, useCallback, useLayoutEffect, useMemo, useRef, useState } from \"react\";\nimport lodash, { compact, get, set, toPairs, uniq } from \"lodash\";\nimport { MapControls } from \"@react-three/drei\";\nimport './MapPlugin.scss';\nimport { Navbar } from \"../Navbar\";\nimport { BoxBufferGeometry, BufferGeometry, ConeBufferGeometry, CylinderBufferGeometry, Mesh, MeshStandardMaterial, PlaneBufferGeometry } from \"three\";\nimport { EffectComposer, SSAO as _SSAO } from \"@react-three/postprocessing\";\nimport { deepCopy } from \"../deepCopy\";\nimport { StockpileUtil } from \"../StockpileUtil\";\nimport { entities } from \"../allEntities\";\n\nconst SSAO = _SSAO as any;\nconst { BlendFunction } = require(\"postprocessing\") as any;\nconst BufferGeometryUtils = require('three/examples/jsm/utils/BufferGeometryUtils.js') as any;\nconst { TREE_ENTITIES, BEAVER_ENTITIES, PATH_ENTITIES, PLATFORM_ENTITIES, STORAGE_ENTITIES: STOCKPILE_ENTITIES } = entities;\n\ninterface State {\n  saveData: DemoSave;\n  mapData: MapData;\n  entityData: EntityData;\n}\n\ninterface MutableState extends State {\n  setEntity: (entity: UnknownEntity) => void;\n  selectEntityId: (id: string | null) => void;\n  selectedEntity: UnknownEntity | null;\n}\n\ninterface MapData {\n  i2x: (i: number) => number,\n  i2y: (i: number) => number,\n  i2xy: (i: number) => [number, number],\n  i2xyz: (i: number, y: number) => [number, number, number],\n  heightMap: Uint8Array;\n  waterDepthMap: Float32Array;\n  moistureMap: Float32Array;\n  mapSizeX: number;\n  mapSizeY: number;\n}\n\ninterface EntityData {\n  deleteIds: string[];\n  updateIds: string[];\n  entitiesByIds: Record<string, UnknownEntity>;\n  entitiesIdsByTemplate: Record<string, string[]>;\n}\n\nconst EDITABLE_ENTITIES = [\n  ...STOCKPILE_ENTITIES, ...TREE_ENTITIES, ...BEAVER_ENTITIES, ...PATH_ENTITIES,\n  ...PLATFORM_ENTITIES,\n];\n\nconst useEntitiesOfTypes = (entityData: EntityData, templateIds: string[]) => {\n  const { entitiesIdsByTemplate, entitiesByIds } = entityData;\n  return useMemo(() => lodash(templateIds)\n    .map(_ => entitiesIdsByTemplate[_])\n    .flatten()\n    .map((id) => entitiesByIds[id])\n    .compact()\n    .toJSON(), [templateIds, entitiesIdsByTemplate, entitiesByIds]);\n}\n\nfunction readEntityData(saveData: DemoSave) {\n  return lodash(saveData.Entities)\n    .filter(_ => EDITABLE_ENTITIES.includes(_.Template))\n    .reduce((acc, entity) => {\n      acc.entitiesByIds[entity.Id] = entity;\n      if (!acc.entitiesIdsByTemplate[entity.Template]) {\n        acc.entitiesIdsByTemplate[entity.Template] = [];\n      }\n      acc.entitiesIdsByTemplate[entity.Template].push(entity.Id);\n      return acc;\n    }, {\n      deleteIds: [],\n      updateIds: [],\n      entitiesByIds: {},\n      entitiesIdsByTemplate: {}\n    } as EntityData)\n}\n\nfunction readMapData(saveData: DemoSave) {\n  const { Singletons } = saveData;\n  const mapSizeX = Singletons.MapSize.Size.X;\n  const mapSizeY = Singletons.MapSize.Size.Y;\n\n  return {\n    i2x: (index: number) => index % mapSizeY,\n    i2y: (index: number) => Math.floor(index / mapSizeY),\n    i2xy: (index: number) => [index % mapSizeY, Math.floor(index / mapSizeY)] as [number, number],\n    i2xyz: (index: number, y: number) => [index % mapSizeY, y, Math.floor(index / mapSizeY)] as [number, number, number],\n    mapSizeX,\n    mapSizeY,\n    heightMap: Uint8Array.from(Singletons.TerrainMap.Heights.Array.split(\" \").map(_ => parseInt(_, 10))),\n    moistureMap: Float32Array.from(Singletons.SoilMoistureSimulator.MoistureLevels.Array.split(\" \").map(_ => parseFloat(_))),\n    waterDepthMap: Float32Array.from(Singletons.WaterMap.WaterDepths.Array.split(\" \").map(_ => parseFloat(_))),\n  }\n}\n\n\nexport const MapPlugin: IEditorPlugin<State, State> = {\n  id: \"MapPlugin\",\n  name: \"Map\",\n  position: 2,\n  group: \"General\",\n  enabled: true,\n\n  read: (saveData) => ({\n    mapData: readMapData(saveData),\n    entityData: readEntityData(saveData),\n    saveData\n  }),\n\n  write: (saveData, state) => {\n    return {\n      ...saveData,\n      Entities: compact(saveData.Entities.map((entity) => {\n        if (state.entityData.deleteIds.includes(entity.Id)) {\n          return null;\n        } else if (state.entityData.updateIds.includes(entity.Id)) {\n          return state.entityData.entitiesByIds[entity.Id];\n        } else {\n          return entity;\n        }\n      }))\n    }\n  },\n\n  Preview: ({ saveData }) => <div>\n    An interactive 3D Map that will take a while to load.\n  </div>,\n\n  Editor: ({ initialData, onSubmit, onClose }) => {\n    const [state, setState] = useState(initialData);\n    const [selectedEntityId, setSelectedEntityId] = useState<string | null>(null);\n    const selectedEntity = (selectedEntityId && state.entityData.entitiesByIds[selectedEntityId]) || null;\n    const { mapSizeX, mapSizeY } = state.mapData;\n\n    const setEntity = (entity: UnknownEntity) => {\n      const oldEntity: UnknownEntity | undefined = state.entityData.entitiesByIds[entity.Id];\n      const newState = {\n        ...state,\n        entityData: {\n          ...state.entityData,\n          updateIds: uniq(state.entityData.updateIds.concat([entity.Id])),\n          entitiesByIds: {\n            ...state.entityData.entitiesByIds,\n            [entity.Id]: entity,\n          },\n        }\n      }\n\n      if (!oldEntity || oldEntity.Template !== entity.Template) {\n        newState.entityData.entitiesIdsByTemplate = {\n          ...newState.entityData.entitiesIdsByTemplate,\n          [oldEntity.Template]: (newState.entityData.entitiesIdsByTemplate[oldEntity.Template] || [])\n            .filter(_ => !oldEntity || (oldEntity && _ !== oldEntity.Id)),\n          [entity.Template]: [...newState.entityData.entitiesIdsByTemplate[entity.Template], entity.Id]\n        };\n      }\n\n      setState(newState);\n    }\n\n    const selectEntityId = useCallback((id: string | null) => {\n      if (selectedEntityId && id) {\n        return;\n      }\n      setSelectedEntityId(id);\n    }, [selectedEntityId, setSelectedEntityId])\n\n    return <div className=\"Map__Editor\">\n      <Navbar onHome={onClose} />\n      <Gui {...state} onSubmit={onSubmit} onClose={onClose} selectEntityId={selectEntityId} selectedEntity={selectedEntity} setEntity={setEntity} />\n\n      <Canvas className=\"Map__Canvas\" camera={{ position: [32, 64, -64] }}>\n        <EffectComposer>\n          <SSAO\n            blendFunction={BlendFunction.MULTIPLY}\n            samples={50}\n            radius={2}\n            intensity={30}\n          />\n        </EffectComposer>\n        <axesHelper position={[0, 8, 0]} scale={[4, 4, 4]} />\n        <ambientLight intensity={0.3} />\n        <directionalLight position={[10, 10, 10]} intensity={0.4} />\n        <group scale={[1, 1, -1]}>\n          <group position={[mapSizeX / -2, 0, mapSizeY / -2]}>\n            <SlowBoxesHeightMap {...state} />\n            <SlowBoxesWaterMap {...state} />\n            <TreesMap {...state} />\n            <PlatformsMap {...state} />\n            <PathsMap {...state} />\n            <StockpilesMap {...state} selectEntityId={selectEntityId} selectedEntity={selectedEntity} setEntity={setEntity} />\n            <BeaversMap {...state} selectEntityId={selectEntityId} selectedEntity={selectedEntity} setEntity={setEntity} />\n          </group>\n        </group>\n        <MapControls />\n      </Canvas>\n    </div>;\n  }\n}\n\ninterface GuiProps extends MutableState {\n  onSubmit: (state: State) => void;\n  onClose: () => void;\n}\n\nfunction Gui(state: GuiProps) {\n  if (!state.selectedEntity) {\n    return <div className=\"Map__Gui\">\n      <div className=\"Map__Gui__Right p-4\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h4 className=\"card-title\">Map Editor</h4>\n            <p>A 3D view of the map. Red bars are beavers. Red boxes are warehouses. Click a red thing to edit. Use mouse to navigate camera.</p>\n            <button className=\"btn btn-primary btn-sm\" onClick={() => state.onSubmit(state)}>Save</button>\n            {\" \"}\n            <button className=\"btn btn-light btn-sm\" onClick={() => state.onClose()}>Discard changes</button>\n          </div>\n        </div>\n      </div>\n    </div>;\n  }\n\n  return <div className=\"Map__Gui\">\n    <div className=\"Map__Gui__Right p-4\">\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">{state.selectedEntity.Template}</h4>\n          {STOCKPILE_ENTITIES.includes(state.selectedEntity.Template) ? <StockpileForm {...state} /> : null}\n          {BEAVER_ENTITIES.includes(state.selectedEntity.Template) ? <BeaverForm {...state} /> : null}\n        </div>\n      </div>\n    </div>\n  </div>;\n}\n\nfunction BeaverForm({ selectedEntity, selectEntityId, setEntity }: MutableState) {\n  const [beaver, setBeaver] = useState<BeaverAdultEntity>(selectedEntity as any);\n\n  const getValue = (path: (string | number)[]) => get(beaver, path);\n  const setValue = (path: (string | number)[], format: (val: string) => any = (x) => x) => (event: FormEvent) => setBeaver(set(deepCopy(beaver), path, format((event.target as any).value)))\n\n  return <form onSubmit={(e) => { e.preventDefault(); setEntity(beaver); selectEntityId(null); }}>\n    <div className=\"mb-1 row\">\n      <label htmlFor=\"name\" className=\"col-sm-4 col-form-label p-1\">Name</label>\n      <div className=\"col-sm-8\">\n        <input type=\"text\" id=\"name\" className=\"form-control p-1\" value={getValue([\"Components\", \"Character\", \"Name\"])} onChange={setValue([\"Components\", \"Character\", \"Name\"])} />\n      </div>\n    </div>\n\n    {beaver.Components.NeedManager.Needs.map((need, index) => <div className=\"mb-1 row\" key={index}>\n      <label htmlFor={\"need-\" + index} className=\"col-sm-4 col-form-label px-1 py-0\">{need.Name}</label>\n      <div className=\"col-sm-8\">\n        <input type=\"range\" min=\"0\" max=\"1\" step=\"0.001\" id={\"need-\" + index} className=\"form-control p-1\"\n          value={getValue([\"Components\", \"NeedManager\", \"Needs\", index, \"Points\"])}\n          onChange={setValue([\"Components\", \"NeedManager\", \"Needs\", index, \"Points\"], (val) => parseFloat(val))} />\n      </div>\n    </div>)}\n\n    <div className=\"mt-2 row\">\n      <div className=\"col-sm-8 offset-sm-4\">\n        <button type=\"submit\" className=\"btn btn-secondary btn-sm\">OK</button>\n        {\" \"}\n        <button type=\"button\" onClick={() => selectEntityId(null)} className=\"btn btn-light btn-sm\">Discard</button>\n      </div>\n    </div>\n  </form>\n}\n\nfunction StockpilesMap({ entityData, selectEntityId, selectedEntity }: MutableState) {\n  const stockpiles = useEntitiesOfTypes(entityData, STOCKPILE_ENTITIES)\n\n  return <group>\n    {stockpiles.map((stockpile) => <Stockpile selected={selectedEntity === stockpile}\n      key={stockpile.Id} stockpile={stockpile} selectEntityId={selectEntityId} />)}\n  </group>\n}\n\nfunction Stockpile({ stockpile, selectEntityId, selected }: { selected: boolean, stockpile: UnknownEntity, selectEntityId: (id: string) => void }) {\n  const [isHover, setIsHover] = useState(false);\n\n  const onClick = () => { selectEntityId(stockpile.Id); }\n  const onPointerEnter = () => { setIsHover(true); }\n  const onPointerLeave = () => { setIsHover(false); }\n\n  const pos = (stockpile.Components as any).BlockObject.Coordinates;\n  const x: number = pos.X;\n  const y: number = pos.Z;\n  const z: number = pos.Y;\n\n  const meshRef = useRef<Mesh>();\n  const template = stockpile.Template;\n\n  useLayoutEffect(() => {\n    if (!meshRef.current) {\n      return;\n    }\n    let sizeX = 3;\n    let sizeY = 1;\n    let sizeZ = 2;\n    let geom: BufferGeometry | null = null;\n\n    if (/SmallWarehouseNew/.test(template)) {\n      sizeX = 1;\n      sizeZ = 1;\n      sizeY = 1;\n    } else if (/UndergroundWarehouse/.test(template)) {\n      sizeZ = 3;\n      sizeY = 3;\n    } else if (/Log/.test(template)) {\n      sizeZ = 3;\n      sizeY = 0.1;\n    } else if (/LargeWarehouse/.test(template)) {\n      sizeZ = 3;\n\n      geom = BufferGeometryUtils.mergeBufferGeometries([\n        new BoxBufferGeometry(sizeX, sizeY, sizeZ, 1.0, 1.0),\n        new BoxBufferGeometry(1, sizeY, sizeZ, 1.0, 1.0).translate(0, 1, 0),\n      ])\n    } else if (/LargeWaterTank/.test(template)) {\n      sizeY = 3\n      geom = BufferGeometryUtils.mergeBufferGeometries([\n        new CylinderBufferGeometry(1.0, 1.0, sizeY, 8, 8, false).translate(0.5, 0, 0),\n        new BoxBufferGeometry(2, 1, 1, 1.0, 1.0).translate(-0.5, -1, 0.5),\n      ])\n    }\n\n    if (!geom) {\n      geom = new BoxBufferGeometry(sizeX, sizeY, sizeZ, 1.0, 1.0);\n    }\n\n    if (isHover || selected) {\n      geom.scale(1.0 + 0.1 / sizeX, 1.0 + 0.1 / sizeY, 1.0 + 0.1 / sizeZ);\n    }\n\n    geom.translate(sizeX / 2 - 0.5, sizeY / 2, sizeZ / 2 - 0.5);\n    rotate(geom, stockpile);\n\n    meshRef.current.geometry = geom;\n  }, [stockpile, template, selected, isHover]);\n\n  return <mesh ref={meshRef} onPointerEnter={onPointerEnter} onPointerLeave={onPointerLeave} onClick={onClick} key={stockpile.Id} position={[x, y, z]}>\n    <meshStandardMaterial opacity={0.9} transparent color={selected ? \"#651FFF\" : (isHover ? \"#FF8A65\" : \"#E64A19\")} />\n  </mesh>;\n}\n\nfunction BeaversMap({ entityData, selectEntityId, selectedEntity }: MutableState) {\n  const beavers = useEntitiesOfTypes(entityData, BEAVER_ENTITIES)\n\n  return <group>\n    {beavers.map((beaver) => <Beaver selected={selectedEntity === beaver} key={beaver.Id}\n      beaver={beaver} selectEntityId={selectEntityId} />)}\n  </group>;\n}\n\nfunction Beaver({ beaver, selectEntityId, selected }: { selected: boolean, beaver: UnknownEntity, selectEntityId: (id: string) => void }) {\n  const [isHover, setIsHover] = useState(false);\n\n  const onClick = () => { selectEntityId(beaver.Id); }\n  const onPointerEnter = () => { setIsHover(true); }\n  const onPointerLeave = () => { setIsHover(false); }\n\n  const pos = (beaver.Components as any).Character.Position;\n  const isAdult = beaver.Template === \"BeaverAdult\";\n  const x: number = pos.X - 0.5;\n  const y: number = pos.Y + 0.1 + (isAdult ? 0.5 : 0.3);\n  const z: number = pos.Z - 0.5;\n  return <mesh onPointerEnter={onPointerEnter} onPointerLeave={onPointerLeave} onClick={onClick} key={beaver.Id} position={[x, y, z]}>\n    <meshStandardMaterial color={selected ? \"#651FFF\" : (isHover ? \"#FF8A65\" : \"#E64A19\")} />\n    <cylinderBufferGeometry args={[\n      (isHover || selected) ? 0.4 : 0.2,\n      (isHover || selected) ? 0.4 : 0.2,\n      (beaver.Template === \"BeaverAdult\" ? 1.0 : 0.6) * (isHover || selected ? 1.2 : 1.0),\n      8.0,\n      1.0,\n    ]} />\n  </mesh>;\n}\n\nfunction StockpileForm({ selectedEntity, selectEntityId, setEntity }: MutableState) {\n  const goodIds: string[] = useMemo(() => selectedEntity ? [(selectedEntity.Components.SingleGoodAllower as any).AllowedGood?.Id].filter(_ => _) : [], [selectedEntity]);\n  const [countGoods, setCountGoods] = useState<Record<string, number>>(() => StockpileUtil.countGoods(selectedEntity!, {}));\n  const capacity = StockpileUtil.getCapacity(selectedEntity!)!;\n  const totalCounts = Object.values(countGoods).reduce((a, b) => a + b, 0);\n\n  const doSubmit = useCallback((event: FormEvent) => {\n    event.preventDefault();\n    const newEntity = deepCopy(selectedEntity) as any;\n    newEntity.Components[\"Inventory:Stockpile\"] = { Storage: { Goods: toPairs(countGoods).map(([Id, Amount]) => ({ Good: { Id }, Amount })) } };\n    setEntity(newEntity);\n    selectEntityId(null);\n  }, [countGoods, selectEntityId, setEntity, selectedEntity]);\n\n  return <form onSubmit={doSubmit}>\n    {goodIds.map((goodId) => <div className=\"mb-1 row\" key={goodId}>\n      <label htmlFor={\"good-\" + goodId} className=\"col-sm-4 col-form-label col-form-label-sm\">{goodId}</label>\n      <div className=\"col-sm-8\">\n        <input type=\"number\" id={\"good-\" + goodId} className=\"form-control form-control-sm\" value={countGoods[goodId] || 0}\n          onChange={(event) => setCountGoods({ ...countGoods, [goodId]: event.target.valueAsNumber || 0 })} />\n      </div>\n    </div>)}\n\n    <div className=\"mt-2 row\">\n      <div className=\"col-sm-8 offset-sm-4\">\n        {totalCounts > capacity\n          ? <div className=\"text-danger p-1\">Warning: <strong>{totalCounts}</strong> storage exceeds capacity of <strong>{capacity}</strong>!</div>\n          : <div className=\"p-1\"><strong>{totalCounts}</strong> / <strong>{capacity}</strong></div>}\n\n        <button type=\"submit\" className=\"btn btn-secondary btn-sm\">OK</button>\n        {\" \"}\n        <button type=\"button\" onClick={() => selectEntityId(null)} className=\"btn btn-light btn-sm\">Discard</button>\n      </div>\n    </div>\n  </form>\n}\n\nfunction createTreeGeom({ dry, dead, adult, x, y, z }: {\n  entity: any;\n  dry: boolean;\n  dead: boolean;\n  adult: boolean;\n  x: number;\n  z: number;\n  y: number;\n}) {\n  return new ConeBufferGeometry((adult ? 0.4 : 0.2) * (dead ? 0.5 : 1.0), adult ? 2.0 : 0.5, 4.0, 4.0)\n    .translate(x, y + 0.5, z)\n}\n\nfunction meshWithColorFromGeoms(geometries: any[], color: string, opacity: number = 1.0) {\n  if (geometries.length === 0) {\n    return new Mesh();\n  }\n  const geom = BufferGeometryUtils.mergeBufferGeometries(geometries)\n  const mat = new MeshStandardMaterial({ color, opacity, transparent: opacity <= 0.99 });\n  return new Mesh(geom, mat);\n}\n\nfunction getEntityRotationY(entity: UnknownEntity): number {\n  const orientationMatch = (entity as any).Components.BlockObject.Orientation?.Value?.match(/Cw(\\d+)/);\n  if (orientationMatch) {\n    return parseFloat(orientationMatch[1]) / 180 * Math.PI;\n  } else {\n    return 0\n  }\n}\n\nfunction rotate(geom: BufferGeometry, entity: UnknownEntity) {\n  return geom.rotateY(getEntityRotationY(entity));\n}\n\nfunction PathsMap({ entityData }: State) {\n  const paths = useEntitiesOfTypes(entityData, PATH_ENTITIES);\n  const mesh = useMemo(() => meshWithColorFromGeoms(paths\n    .map((_: any) => {\n      let geom: BufferGeometry | null = null;\n      if (/Slope|Stairs/.test(_.Template)) {\n        geom = new PlaneBufferGeometry(1, 1.44, 1, 1).rotateX(-Math.PI / 4).translate(0, 0.6, 0)\n        geom = rotate(geom, _);\n      } else if (/DistrictGate/.test(_.Template)) {\n        geom = BufferGeometryUtils.mergeBufferGeometries([\n          new PlaneBufferGeometry(1, 1, 1, 1).rotateX(-Math.PI / 2).translate(0, 0.1, 0),\n          rotate(new BoxBufferGeometry(0.8, 1, 0.1, 1, 1, 1).translate(0, 0.5, 0), _),\n        ])\n      } else {\n        geom = new PlaneBufferGeometry(1, 1, 1, 1).rotateX(-Math.PI / 2).translate(0, 0.1, 0)\n      }\n\n      return geom ? geom.translate(\n        _.Components.BlockObject.Coordinates.X,\n        _.Components.BlockObject.Coordinates.Z,\n        _.Components.BlockObject.Coordinates.Y\n      ) : null;\n    }).filter(_ => _), \"#BCAAA4\", 0.8), [paths]);\n\n  return <primitive object={mesh} />;\n}\n\nfunction PlatformsMap({ entityData }: State) {\n  const paths = useEntitiesOfTypes(entityData, PLATFORM_ENTITIES);\n  const geom = useMemo(() => meshWithColorFromGeoms(paths\n    .map((_: any) => {\n      let geom: BufferGeometry | null = null;\n      let height = 1;\n      if (/DoublePlatform/.test(_.Template)) {\n        height = 2;\n      } else if (/TriplePlatform/.test(_.Template)) {\n        height = 3;\n      }\n      height -= 0.05;\n      geom = BufferGeometryUtils.mergeBufferGeometries([\n        new BoxBufferGeometry(0.1, height, 0.1, 1, 1, 1).translate(-0.4, height / 2, -0.4),\n        new BoxBufferGeometry(0.1, height, 0.1, 1, 1, 1).translate(0.4, height / 2, 0.4),\n        new BoxBufferGeometry(0.1, height, 0.1, 1, 1, 1).translate(0.4, height / 2, -0.4),\n        new BoxBufferGeometry(0.1, height, 0.1, 1, 1, 1).translate(-0.4, height / 2, 0.4),\n        new BoxBufferGeometry(0.95, 0.05, 0.95, 1, 1, 1).translate(0, height + 0.025, 0),\n      ]);\n\n      return geom ? geom.translate(\n        _.Components.BlockObject.Coordinates.X,\n        _.Components.BlockObject.Coordinates.Z,\n        _.Components.BlockObject.Coordinates.Y\n      ) : null;\n    }).filter(_ => _), \"#A1887F\"), [paths]);\n\n  return <primitive object={geom} />;\n}\n\nfunction TreesMap({ entityData }: State) {\n  const treeEntities = useEntitiesOfTypes(entityData, TREE_ENTITIES);\n\n  const { greenTrees, brownTrees } = useMemo(() => {\n    const trees = treeEntities.map((_: any) => ({\n      entity: _,\n      dry: _.Components.WateredNaturalResource.DryingProgress > 0.9999,\n      dead: false, // _.Components.LivingNaturalResource.IsDead as boolean,\n      adult: _.Components.Growable.GrowthProgress > 0.9999,\n      x: _.Components.BlockObject.Coordinates.X as number,\n      z: _.Components.BlockObject.Coordinates.Y as number,\n      y: _.Components.BlockObject.Coordinates.Z as number,\n    }));\n\n    const greenTrees = meshWithColorFromGeoms(\n      trees.filter(_ => !(_.dry || _.dead)).map(createTreeGeom), \"#388E3C\");\n    const brownTrees = meshWithColorFromGeoms(\n      trees.filter(_ => _.dry || _.dead).map(createTreeGeom), \"#5D4037\");\n\n    return { greenTrees, brownTrees }\n  }, [treeEntities]);\n\n  return <group>\n    <primitive object={greenTrees} />\n    <primitive object={brownTrees} />\n  </group>;\n}\n\nfunction SlowBoxesWaterMap({ mapData }: State) {\n  const { i2x, i2y, heightMap, waterDepthMap } = mapData;\n\n  const mesh = useMemo(() => {\n    const geoms = lodash(waterDepthMap).reduce((acc, y, i) => {\n      if (y > 0) {\n        acc.push(new PlaneBufferGeometry(1, 1, 1, 1)\n          .rotateX(-Math.PI / 2)\n          .translate(i2x(i), y * 0.95 + 0.05 + heightMap[i], i2y(i)));\n      }\n      return acc;\n    }, [] as BufferGeometry[]);\n\n    return meshWithColorFromGeoms(geoms, \"#0044cc\", 0.8);\n  }, [i2x, i2y, heightMap, waterDepthMap])\n\n  return <primitive object={mesh} />;\n}\n\nfunction SlowBoxesHeightMap({ mapData }: State) {\n  const { heightMap, moistureMap, i2x, i2y } = mapData;\n  const { wetLand, dryLand } = useMemo(() => {\n    const { wetBoxes, dryBoxes } = lodash(heightMap)\n      .reduce((acc, height, index) => {\n        const isWet = moistureMap[index] > 0;\n        const box = new BoxBufferGeometry(1, height, 1, 1, 1, 1).translate(i2x(index), height / 2, i2y(index));\n        (isWet ? acc.wetBoxes : acc.dryBoxes).push(box);\n        return acc;\n      }, { wetBoxes: [] as BufferGeometry[], dryBoxes: [] as BufferGeometry[] })\n\n    return {\n      wetLand: meshWithColorFromGeoms(wetBoxes, \"#8BC34A\"),\n      dryLand: meshWithColorFromGeoms(dryBoxes, \"#795548\")\n    }\n  }, [i2x, i2y, heightMap, moistureMap])\n\n  return <group>\n    <primitive object={wetLand} />\n    <primitive object={dryLand} />\n  </group>;\n}\n","import { useState } from \"react\";\nimport { IEditorPlugin } from \"../IEditorPlugin\";\n\ninterface MapSizeParams {\n  x: number;\n  y: number;\n}\n\nexport const MapSizePlugin: IEditorPlugin<MapSizeParams, MapSizeParams> = {\n  id: \"MapSizePlugin\",\n  name: \"Map size\",\n  group: \"General\",\n  position: Infinity,\n  enabled: true,\n\n  read(saveData) {\n    const x = saveData.Singletons.MapSize.Size.X;\n    const y = saveData.Singletons.MapSize.Size.Y;\n    return { x, y };\n  },\n\n  write(saveData, data) {\n    saveData.Singletons.MapSize.Size.X = data.x;\n    saveData.Singletons.MapSize.Size.Y = data.y;\n    return saveData;\n  },\n\n  Preview({ saveData }) {\n    console.log(saveData.Entities.map(_ => _.Template).filter((_, i, arr) => arr.indexOf(_) === i))\n\n    const x = saveData.Singletons.MapSize.Size.X;\n    const y = saveData.Singletons.MapSize.Size.Y;\n    return <span>\n      <strong>{x}</strong> &times; <strong>{y}</strong>\n    </span>;\n  },\n\n  Editor({ initialData, onClose, onSubmit }) {\n    const [data, setData] = useState(initialData);\n\n    return <form onSubmit={(e) => { e.preventDefault(); onSubmit(data); }}>\n      <div className=\"container\">\n        <div className=\"card my-4\">\n          <div className=\"card-body\">\n            <h1 className=\"card-title\">Map size editor</h1>\n            <p>This is just a demo editor - changing this will likely break something.</p>\n            <div className=\"mb-3\">\n              <label htmlFor=\"x\" className=\"form-label\">X</label>\n              <input id=\"x\" type=\"number\" className=\"form-control\" value={data.x} onInput={(e) => setData({ ...data, x: parseInt((e.target as HTMLInputElement).value, 10) })} />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"y\" className=\"form-label\">Y</label>\n              <input id=\"y\" type=\"number\" className=\"form-control\" value={data.y} onInput={(e) => setData({ ...data, y: parseInt((e.target as HTMLInputElement).value, 10) })} />\n            </div>\n            <div className=\"d-flex\">\n              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n              <button type=\"button\" className=\"btn btn-light ms-auto\" onClick={onClose}>Discard changes</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>;\n  }\n}\n","import { fromJS, Map } from \"immutable\";\nimport { get } from \"lodash\";\nimport { useState } from \"react\";\nimport { DemoSave } from \"../DemoSave\";\nimport { IEditorPlugin } from \"../IEditorPlugin\";\n\ntype Singletons = DemoSave[\"Singletons\"];\n\ninterface InputDef {\n  label: string;\n  path: Array<string|number>;\n  type: \"number\"|\"text\";\n  parse: (value: string) => any;\n  step?: string;\n}\n\ninterface HeaderDef {\n  label: string;\n  type: \"header\";\n}\n\ntype FieldDefinition = InputDef|HeaderDef;\n\nconst parseIntValue = (value: string) => parseInt(value, 10);\n\nconst fields: FieldDefinition[] = [{\n  label: \"Science\",\n  path: [\"ScienceService\", \"SciencePoints\"],\n  type: \"number\",\n  parse: parseIntValue,\n}, {\n  label: \"Cycle & Day\",\n  type: \"header\",\n}, {\n  label: \"Cycle\",\n  path: [\"WeatherService\", \"Cycle\"],\n  type: \"number\",\n  parse: parseIntValue,\n}, {\n  label: \"Cycle day\",\n  path: [\"WeatherService\", \"CycleDay\"],\n  type: \"number\",\n  parse: parseIntValue,\n}, {\n  label: \"Temperate weather duration\",\n  path: [\"WeatherService\", \"TemperateWeatherDuration\"],\n  type: \"number\",\n  parse: parseIntValue,\n}, {\n  label: \"Drought duration\",\n  path: [\"WeatherService\", \"DroughtDuration\"],\n  type: \"number\",\n  parse: parseIntValue,\n}, {\n  label: \"Weather Duration\",\n  type: \"header\",\n}, {\n  label: \"Min temperate weather duration\",\n  path: [\"WeatherDurationService\", \"MinTemperateWeatherDuration\"],\n  type: \"number\",\n  parse: parseIntValue,\n}, {\n  label: \"Max temperate weather duration\",\n  path: [\"WeatherDurationService\", \"MaxTemperateWeatherDuration\"],\n  type: \"number\",\n  parse: parseIntValue,\n}, {\n  label: \"Min drought duration\",\n  path: [\"WeatherDurationService\", \"MinDroughtDuration\"],\n  type: \"number\",\n  parse: parseIntValue,\n}, {\n  label: \"Max drought duration\",\n  path: [\"WeatherDurationService\", \"MaxDroughtDuration\"],\n  type: \"number\",\n  parse: parseIntValue,\n}, {\n  label: \"Handicap multiplier\",\n  path: [\"WeatherDurationService\", \"HandicapMultiplier\"],\n  type: \"number\",\n  parse: parseFloat,\n  step: \"0.1\",\n}, {\n  label: \"Handicap cycles\",\n  path: [\"WeatherDurationService\", \"HandicapCycles\"],\n  type: \"number\",\n  parse: parseIntValue,\n}];\n\n\nexport const PropertiesPlugin: IEditorPlugin<Singletons, Singletons> = {\n  read: (saveData) => saveData.Singletons,\n  write: (saveData, data) => ({ ...saveData, Singletons: data }),\n  position: 0,\n  id: \"PropertiesPlugin\",\n  name: \"Properties\",\n  group: \"General\",\n  enabled: true,\n  Preview: ({ saveData }) => {\n    return <div className=\"row\">\n      {(fields.filter((_) => _.type !== \"header\") as InputDef[])\n        .map((_) => <div className=\"col-4\" key={(_.path.join(\".\"))}>{_.label}: <strong>{get(saveData.Singletons, _.path)}</strong></div>)}\n    </div>;\n  },\n  Editor: ({ initialData, onClose, onSubmit }) => {\n    const [data, setData] = useState(fromJS(initialData) as Map<string, any>);\n\n    return <form onSubmit={(e) => { e.preventDefault(); onSubmit(data.toJS() as Singletons); }}>\n      <div className=\"container\">\n        <div className=\"card my-4\">\n          <div className=\"card-body\">\n            <h1 className=\"card-title\">Properties</h1>\n            <div className=\"row\">\n              {fields.map((field) => {\n                if (field.type === \"header\") {\n                  return <h5 key={field.label} className=\"mb-1 col-12\">{field.label}</h5>\n                } else {\n                  const { path, type, parse, label } = field;\n                  const id = path.join(\".\")\n                  return <div key={id} className=\"mb-3 col-4\">\n                    <label htmlFor={id} className=\"form-label form-label-sm\">{label}</label>\n                    <input id={id} type={type} className=\"form-control form-control-sm\"\n                      value={data.getIn(path) as string} step={field.step}\n                      onInput={(e) => setData(data.setIn(path, parse((e.target as HTMLInputElement).value)))} />\n                  </div>;\n                }\n              })}\n            </div>\n            <div className=\"d-flex\">\n              <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n              <button type=\"button\" className=\"btn btn-light ms-auto\" onClick={onClose}>Discard changes</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>;\n  }\n}\n","import { assign, chunk, fill, groupBy, map, mapValues, sum, toPairs, values } from \"lodash\";\nimport { FormEvent, Fragment, useCallback, useMemo, useState } from \"react\";\nimport { DemoSave, UnknownEntity } from \"../DemoSave\";\nimport { IEditorPlugin } from \"../IEditorPlugin\";\nimport { StockpileUtil } from \"../StockpileUtil\";\n\nexport const StockpilePlugin: IEditorPlugin<DemoSave, DemoSave> = {\n  id: \"StockpilePlugin\",\n  name: \"Manage stockpile inventories\",\n  group: \"Storage\",\n  position: 20,\n  enabled: true,\n\n  read: (save) => save,\n  write: (_, data) => data,\n\n  Preview: ({ saveData }) => {\n    (window as any).__saveData = saveData;\n    const stockpiles = useMemo(() => StockpileUtil.getStockpiles(saveData), [saveData]);\n    const allGoods = useMemo(() => stockpiles.reduce((acc, stockpile) => StockpileUtil.countGoods(stockpile, acc), {} as Record<string, number>), [stockpiles]);\n\n    return <div>\n      <StockpileInventoryTable counts={allGoods} />\n    </div>\n  },\n\n  Editor: ({ initialData, onClose, onSubmit }) => {\n    const [stockpileId, setStockpileId] = useState<string | null>(null);\n    const [stockpiles, setStockpiles] = useState(() => StockpileUtil.getStockpiles(initialData));\n\n    const setStockpile = useCallback((type: \"self\" | \"all\", stockpile: UnknownEntity) => {\n      setStockpiles(stockpiles.slice().map((_) => (type === \"all\" ? _.Template === stockpile.Template : _.Id === stockpile.Id) ? {\n        ..._,\n        Components: { ..._.Components, \"Inventory:Stockpile\": stockpile.Components[\"Inventory:Stockpile\"] }\n      } : _));\n      setStockpileId(null);\n    }, [setStockpiles, stockpiles, setStockpileId])\n\n    const doSubmit = useCallback(() => {\n      const mappedStockpiles = mapValues(groupBy(stockpiles, \"Id\"), (arr) => arr[0]);\n\n      onSubmit({\n        ...initialData,\n        Entities: initialData.Entities.map((_) => mappedStockpiles[_.Id] ? mappedStockpiles[_.Id] : _),\n      });\n    }, [onSubmit, initialData, stockpiles]);\n\n    return <div className=\"container my-4\">\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h1 className=\"card-title\">Manage stockpile inventories</h1>\n          <div className=\"d-flex\">\n            <button type=\"button\" className=\"btn btn-primary\" onClick={doSubmit}>Submit</button>\n            <button type=\"button\" className=\"btn btn-light ms-auto\" onClick={onClose}>Discard changes</button>\n          </div>\n        </div>\n        <div className=\"list-group list-group-flush\">\n          {stockpiles.map((stockpile) => stockpileId === stockpile.Id\n            ? <StockpileForm key={stockpile.Id} setStockpile={setStockpile} stockpile={stockpile} />\n            : <StockpileButton key={stockpile.Id} setStockpileId={setStockpileId} stockpile={stockpile} />)}\n        </div>\n      </div>\n    </div>;\n  }\n}\n\nfunction StockpileForm({ stockpile, setStockpile }: { stockpile: UnknownEntity, setStockpile: (type: \"self\" | \"all\", stockpile: UnknownEntity) => void }) {\n  const goods: string[] = useMemo(() => [(stockpile.Components.SingleGoodAllower as any).AllowedGood?.Id].filter(_ => _), [stockpile]);\n  const [counts, setCounts] = useState(() => StockpileUtil.countGoods(stockpile));\n\n  const onSubmit = useCallback((event: FormEvent) => {\n    event.preventDefault();\n    const type = (event.nativeEvent as SubmitEvent).submitter?.getAttribute(\"value\") === \"all\" ? \"all\" : \"self\";\n    setStockpile(type, {\n      ...stockpile,\n      Components: {\n        ...stockpile.Components,\n        \"Inventory:Stockpile\": {\n          Storage: {\n            Goods: toPairs(counts).filter(([k, v]) => v && v > 0).map(([Id, Amount]) => ({ Good: { Id }, Amount }))\n          }\n        }\n      }\n    })\n  }, [stockpile, setStockpile, counts]);\n\n\n  const setCount = useCallback((good: string, count: number) => {\n    setCounts({ ...counts, [good]: count });\n  }, [setCounts, counts]);\n\n  const totalCounts = sum(map(values(counts), _ => _ || 0));\n  const capacity = StockpileUtil.getCapacity(stockpile) ?? 0;\n\n  const fillToCapacity = useCallback((capacity: number) => {\n    const initialMaxGood = Math.floor(capacity / goods.length);\n    let remainder = capacity - initialMaxGood * goods.length; // Seems slightly faster than modulo\n    const newCounts: Record<string, number> = {};\n    goods.forEach((good: string) => {\n      newCounts[good] = initialMaxGood + (remainder-- > 0 ? 1 : 0);\n    });\n    setCounts(newCounts);\n  }, [goods]);\n\n  return <div className=\"list-group-item\">\n    <div className=\"d-flex\">\n      <div>\n        <b>{stockpile.Template}</b>\n        <div style={{ whiteSpace: \"nowrap\" }}>\n          x: <b>{Math.round((stockpile.Components.BlockObject as any).Coordinates.X)}</b>{\" \"}\n          y: <b>{Math.round((stockpile.Components.BlockObject as any).Coordinates.Y)}</b>{\" \"}\n          z: <b>{Math.round((stockpile.Components.BlockObject as any).Coordinates.Z)}</b>{\" \"}\n        </div>\n      </div>\n      <form className=\"flex-fill\" onSubmit={onSubmit}>\n        {goods.map((good) => <div key={good} className=\"row mb-3\">\n          <label className=\"col-sm-2 col-form-label col-form-label-sm text-end\">{good}</label>\n          <div className=\"col-sm-10\">\n            <input className=\"form-control form-control-sm\" type=\"number\"\n              onChange={(event) => { setCount(good, event.target.valueAsNumber ?? 0) }} value={counts[good] || \"\"} />\n          </div>\n        </div>)}\n        <div className=\"row\">\n          <div className=\"col-sm-10 offset-sm-2 d-flex\">\n            <button type=\"submit\" name=\"submit\" value=\"self\" className=\"btn btn-primary btn-sm\">OK</button>\n            {totalCounts > capacity\n              ? <div className=\"text-danger p-1\">Warning: <strong>{totalCounts}</strong> storage exceeds capacity of <strong>{capacity}</strong>!</div>\n              : <div className=\"p-1\"><strong>{totalCounts}</strong> / <strong>{capacity}</strong></div>}\n            <button\n              className=\"ms-auto btn btn-secondary btn-sm\"\n              onClick={(e) => {\n                e.preventDefault();\n                fillToCapacity(capacity);\n              }}\n            >\n              Fill\n            </button>\n            <button type=\"submit\" name=\"submit\" value=\"all\" className=\"ms-1 btn btn-danger btn-sm\">OK &amp; update all</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n}\n\nfunction StockpileButton({ stockpile, setStockpileId }: { stockpile: UnknownEntity, setStockpileId: (id: string) => void }) {\n  return <button onClick={() => setStockpileId(stockpile.Id)} className=\"list-group-item list-group-item-action\">\n    <div className=\"d-flex\">\n      <div>\n        <b>{stockpile.Template}</b>\n        <div style={{ whiteSpace: \"nowrap\" }}>\n          x: <b>{Math.round((stockpile.Components.BlockObject as any).Coordinates.X)}</b>{\" \"}\n          y: <b>{Math.round((stockpile.Components.BlockObject as any).Coordinates.Y)}</b>{\" \"}\n          z: <b>{Math.round((stockpile.Components.BlockObject as any).Coordinates.Z)}</b>{\" \"}\n        </div>\n      </div>\n      <StockpileInventoryTable counts={StockpileUtil.countGoods(stockpile)} />\n    </div>\n  </button>;\n}\n\nfunction StockpileInventoryTable({ counts }: { counts: Record<string, number> }) {\n  return <table className=\"table table-sm table-borderless my-0\">\n    <tbody>\n      {chunk(toPairs(counts), 5).map((chunk, index) => <tr key={index}>\n        {assign(fill(new Array(5), [\"\", \"\"]), chunk).map(([label, value], i) => <Fragment key={i}>\n          <th style={{ width: \"17%\" }} className=\"text-end\">{label}</th>\n          <td style={{ width: \"3%\" }} className=\"text-end\">{value}</td>\n        </Fragment>)}\n      </tr>)}\n    </tbody>\n  </table>;\n}\n","import { sortBy } from \"lodash\";\nimport { IEditorPlugin } from \"./IEditorPlugin\";\nimport * as pluginsImport from \"./plugins\";\n\nexport const allPlugins: IEditorPlugin<any, any>[] = sortBy(Object\n  .values(pluginsImport)\n  .filter(_ => _ && typeof _ === \"object\"), \"position\");\n","import { useMemo } from \"react\";\nimport { DemoSave } from \"./DemoSave\";\nimport { allPlugins } from \"./allPlugins\";\nimport { groupBy, toPairs } from \"lodash\";\n\nexport function PluginIndex({ saveData, onSelectPlugin }: { saveData: DemoSave, onSelectPlugin: (pluginId: string) => void }) {\n  const groupedPlugins = useMemo(() => toPairs(groupBy(allPlugins\n    .filter(_ => typeof _.enabled === \"function\" ? _.enabled({saveData}) : _.enabled), \"group\")), [saveData]);\n\n  return <div className=\"container\">\n    {groupedPlugins.map(([groupName, plugins]) => <div key={groupName} className=\"my-2\">\n      <h2 className=\"ps-2\">{groupName}</h2>\n      <div className=\"list-group my-2\">\n      {plugins.map(({ id, name, Preview }) => <button type=\"button\" key={id} onClick={(e) => {e.preventDefault(); onSelectPlugin(id)}} className=\"list-group-item list-group-item-action\">\n        <div className=\"fw-bold\">{name}</div>\n        <div><Preview saveData={saveData} /></div>\n      </button>)}\n      </div>\n    </div>)}\n  </div>\n}\n","import { useCallback, useMemo } from \"react\";\nimport { DemoSave } from \"./DemoSave\";\nimport { allPlugins } from \"./allPlugins\";\nimport { deepCopy } from \"./deepCopy\";\n\nexport function PluginShow({ saveData, pluginId, onClose, onSubmit }: { saveData: DemoSave, pluginId: string, onClose: () => void; onSubmit: (save: DemoSave) => void }) {\n  const {Editor, read, write} = useMemo(() => allPlugins.find(_ => _.id === pluginId), [pluginId])!;\n\n  const data = useMemo(() => read(deepCopy(saveData)), [read, saveData]);\n\n  const onSubmitData = useCallback((newData: unknown) => {\n    onSubmit(deepCopy(write(saveData, newData)));\n  }, [write, saveData, onSubmit]);\n\n  return <Editor initialData={data} onClose={onClose} onSubmit={onSubmitData} />;\n}\n","import { useCallback, useState } from \"react\";\nimport { DemoSave } from \"./DemoSave\";\nimport { Navbar } from \"./Navbar\";\nimport { PluginIndex } from \"./PluginIndex\";\nimport { PluginShow } from \"./PluginShow\";\n\nexport function SaveEditor({ saveData, onSubmit }: { saveData: DemoSave, onSubmit: (saveData: DemoSave|null) => void }) {\n  const [pluginId, setPluginId] = useState<null|string>(null);\n\n  const onSubmitPlugin = useCallback((saveData: DemoSave) => {\n    onSubmit(saveData);\n    setPluginId(null);\n  }, [onSubmit]);\n\n  const onHome = useCallback(() => {\n    if (pluginId) {\n      if (window.confirm(\"Discard changes in this form? Earlier changes will not be discarded.\")) {\n        setPluginId(null);\n      }\n    } else if (window.confirm(\"Close this save file?\")) {\n      onSubmit(null);\n    }\n  }, [pluginId, onSubmit]);\n\n  return <>\n    <Navbar onHome={onHome} />\n    {pluginId === null\n      ? <PluginIndex saveData={saveData} onSelectPlugin={setPluginId} />\n      : <PluginShow saveData={saveData} pluginId={pluginId} onClose={() => setPluginId(null)} onSubmit={onSubmitPlugin} />}\n  </>;\n}\n","import { useState } from 'react';\nimport './App.css';\nimport { DemoSave } from './DemoSave';\nimport { LoadSaveCard } from './LoadSaveCard';\nimport { Navbar } from './Navbar';\nimport { SaveContext } from './SaveContext';\nimport { SaveEditor } from './SaveEditor';\n\nfunction App() {\n  const [ saveData, setSaveData ] = useState<DemoSave|null>(null);\n\n  return <>\n    {saveData === null\n      ? <>\n        <Navbar onHome={() => { /* do nothing */ }} />\n        <LoadSaveCard onSaveLoaded={setSaveData} />\n      </>\n      : <SaveContext.Provider value={{saveData}}>\n        <SaveEditor saveData={saveData} onSubmit={setSaveData} />\n      </SaveContext.Provider>}\n  </>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}